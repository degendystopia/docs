/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../../../contracts/utility/StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "staked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526601c6bf5263400060015534801561001b57600080fd5b5060405161080d38038061080d83398101604081905261003a9161005f565b600080546001600160a01b0319166001600160a01b039290921691909117905561008f565b60006020828403121561007157600080fd5b81516001600160a01b038116811461008857600080fd5b9392505050565b61076f8061009e6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c806398807d841161007157806398807d8414610167578063a694fc3a14610190578063b88a802f146101a3578063c8f33c91146101ab578063cd3daf9d146101b4578063df136d65146101bc57600080fd5b80628cc262146100b85780630700037d146100de5780632e1a7d4d146100fe57806372f702f3146101135780637b0a47ee1461013e5780638b87634714610147575b600080fd5b6100cb6100c636600461062f565b6101c5565b6040519081526020015b60405180910390f35b6100cb6100ec36600461062f565b60056020526000908152604090205481565b61011161010c36600461065f565b610242565b005b600054610126906001600160a01b031681565b6040516001600160a01b0390911681526020016100d5565b6100cb60015481565b6100cb61015536600461062f565b60046020526000908152604090205481565b6100cb61017536600461062f565b6001600160a01b031660009081526007602052604090205490565b61011161019e36600461065f565b61033e565b610111610554565b6100cb60025481565b6100cb6105d1565b6100cb60035481565b6001600160a01b0381166000908152600560209081526040808320546004909252822054670de0b6b3a7640000906101fb6105d1565b610205919061068e565b6001600160a01b03851660009081526007602052604090205461022891906106a5565b61023291906106c4565b61023c91906106e6565b92915050565b3361024b6105d1565b6003554260025561025b816101c5565b6001600160a01b0382166000908152600560209081526040808320939093556003546004909152918120919091556006805484929061029b90849061068e565b909155505033600090815260076020526040812080548492906102bf90849061068e565b909155505060005460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610315573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033991906106fe565b505050565b336103476105d1565b60035542600255610357816101c5565b6001600160a01b038216600090815260056020908152604080832093909355600354600490915291812091909155600680548492906103979084906106e6565b909155505033600090815260076020526040812080548492906103bb9084906106e6565b909155505060008054604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa15801561040f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104339190610720565b9050828110156104835760405162461bcd60e51b8152602060048201526016602482015275696e73756666696369656e7420616c6c6f77616e636560501b60448201526064015b60405180910390fd5b600080546040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff91906106fe565b90508061054e5760405162461bcd60e51b815260206004820152601a60248201527f4661696c656420746f207472616e7366657220746f6b656e732e000000000000604482015260640161047a565b50505050565b3361055d6105d1565b6003554260025561056d816101c5565b6001600160a01b0382166000908152600560208181526040808420949094556003546004825284842055338084529190528282208054908390559251909183156108fc02918491818181858888f19350505050158015610339573d6000803e3d6000fd5b60006006546000036105e4575060035490565b6006546001546002546105f7904261068e565b61060191906106a5565b61061390670de0b6b3a76400006106a5565b61061d91906106c4565b60035461062a91906106e6565b905090565b60006020828403121561064157600080fd5b81356001600160a01b038116811461065857600080fd5b9392505050565b60006020828403121561067157600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156106a0576106a0610678565b500390565b60008160001904831182151516156106bf576106bf610678565b500290565b6000826106e157634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156106f9576106f9610678565b500190565b60006020828403121561071057600080fd5b8151801515811461065857600080fd5b60006020828403121561073257600080fd5b505191905056fea26469706673582212202c352d721f2615c351f7e0949584561f92021f6084e353f4a2e079ea9003a9a764736f6c634300080d0033";

type StakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingRewards__factory extends ContractFactory {
  constructor(...args: StakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _stakingToken,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  override getDeployTransaction(
    _stakingToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stakingToken, overrides || {});
  }
  override attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  override connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
