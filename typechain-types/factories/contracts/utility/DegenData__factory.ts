/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DegenData,
  DegenDataInterface,
} from "../../../contracts/utility/DegenData";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_renameCost",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_worlds",
        type: "address",
      },
      {
        internalType: "address",
        name: "_degens",
        type: "address",
      },
      {
        internalType: "address",
        name: "_payments",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "world",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "DegenDataUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_world",
        type: "uint256",
      },
    ],
    name: "getDegenData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "x",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "y",
                    type: "uint16",
                  },
                ],
                internalType: "struct Position",
                name: "pos",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "maxHealth",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "maxEnergy",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "speed",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "range",
                    type: "uint16",
                  },
                ],
                internalType: "struct Stats",
                name: "stats",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "uint16",
                    name: "level",
                    type: "uint16",
                  },
                ],
                internalType: "struct Skill[]",
                name: "skills",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "curHealth",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "curEnergy",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "deaths",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "kills",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "murders",
                    type: "uint16",
                  },
                  {
                    internalType: "bool",
                    name: "isCriminal",
                    type: "bool",
                  },
                ],
                internalType: "struct Status",
                name: "status",
                type: "tuple",
              },
            ],
            internalType: "struct Character",
            name: "char",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                ],
                internalType: "struct Token[]",
                name: "tokens",
                type: "tuple[]",
              },
            ],
            internalType: "struct Inventory",
            name: "inventory",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                ],
                internalType: "struct Token[]",
                name: "tokens",
                type: "tuple[]",
              },
            ],
            internalType: "struct Inventory",
            name: "bank",
            type: "tuple",
          },
        ],
        internalType: "struct Degen",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDegenName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_world",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint16",
                name: "x",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "y",
                type: "uint16",
              },
            ],
            internalType: "struct Position",
            name: "pos",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "maxHealth",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "maxEnergy",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "speed",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "range",
                type: "uint16",
              },
            ],
            internalType: "struct Stats",
            name: "stats",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint16",
                name: "level",
                type: "uint16",
              },
            ],
            internalType: "struct Skill[]",
            name: "skills",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "curHealth",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "curEnergy",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "deaths",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "kills",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "murders",
                type: "uint16",
              },
              {
                internalType: "bool",
                name: "isCriminal",
                type: "bool",
              },
            ],
            internalType: "struct Status",
            name: "status",
            type: "tuple",
          },
        ],
        internalType: "struct Character",
        name: "_char",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Token[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Inventory",
        name: "_inventory",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Token[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Inventory",
        name: "_bank",
        type: "tuple",
      },
    ],
    name: "getNextHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash_",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature_",
        type: "bytes",
      },
    ],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_world",
        type: "uint256",
      },
    ],
    name: "popInventory",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Token[]",
            name: "tokens",
            type: "tuple[]",
          },
        ],
        internalType: "struct Inventory",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "rename",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "world",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "x",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "y",
                    type: "uint16",
                  },
                ],
                internalType: "struct Position",
                name: "pos",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "maxHealth",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "maxEnergy",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "speed",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "range",
                    type: "uint16",
                  },
                ],
                internalType: "struct Stats",
                name: "stats",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "uint16",
                    name: "level",
                    type: "uint16",
                  },
                ],
                internalType: "struct Skill[]",
                name: "skills",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "curHealth",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "curEnergy",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "deaths",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "kills",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "murders",
                    type: "uint16",
                  },
                  {
                    internalType: "bool",
                    name: "isCriminal",
                    type: "bool",
                  },
                ],
                internalType: "struct Status",
                name: "status",
                type: "tuple",
              },
            ],
            internalType: "struct Character",
            name: "char",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                ],
                internalType: "struct Token[]",
                name: "tokens",
                type: "tuple[]",
              },
            ],
            internalType: "struct Inventory",
            name: "inventory",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                ],
                internalType: "struct Token[]",
                name: "tokens",
                type: "tuple[]",
              },
            ],
            internalType: "struct Inventory",
            name: "bank",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "worldSignature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                components: [
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "uint16",
                            name: "x",
                            type: "uint16",
                          },
                          {
                            internalType: "uint16",
                            name: "y",
                            type: "uint16",
                          },
                        ],
                        internalType: "struct Position",
                        name: "pos",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "uint16",
                            name: "maxHealth",
                            type: "uint16",
                          },
                          {
                            internalType: "uint16",
                            name: "maxEnergy",
                            type: "uint16",
                          },
                          {
                            internalType: "uint16",
                            name: "speed",
                            type: "uint16",
                          },
                          {
                            internalType: "uint16",
                            name: "range",
                            type: "uint16",
                          },
                        ],
                        internalType: "struct Stats",
                        name: "stats",
                        type: "tuple",
                      },
                      {
                        components: [
                          {
                            internalType: "string",
                            name: "name",
                            type: "string",
                          },
                          {
                            internalType: "uint16",
                            name: "level",
                            type: "uint16",
                          },
                        ],
                        internalType: "struct Skill[]",
                        name: "skills",
                        type: "tuple[]",
                      },
                      {
                        components: [
                          {
                            internalType: "uint16",
                            name: "curHealth",
                            type: "uint16",
                          },
                          {
                            internalType: "uint16",
                            name: "curEnergy",
                            type: "uint16",
                          },
                          {
                            internalType: "uint16",
                            name: "deaths",
                            type: "uint16",
                          },
                          {
                            internalType: "uint16",
                            name: "kills",
                            type: "uint16",
                          },
                          {
                            internalType: "uint16",
                            name: "murders",
                            type: "uint16",
                          },
                          {
                            internalType: "bool",
                            name: "isCriminal",
                            type: "bool",
                          },
                        ],
                        internalType: "struct Status",
                        name: "status",
                        type: "tuple",
                      },
                    ],
                    internalType: "struct Character",
                    name: "char",
                    type: "tuple",
                  },
                ],
                internalType: "struct Dystopian",
                name: "data",
                type: "tuple",
              },
              {
                internalType: "bytes",
                name: "worldSignature",
                type: "bytes",
              },
            ],
            internalType: "struct SignedDystopian[]",
            name: "signedDystopians",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "dystopians",
            type: "address",
          },
        ],
        internalType: "struct UpdateDegenDataParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "updateDegenData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620025de380380620025de833981016040819052620000349162000174565b600086905584516200004e9060019060208801906200009b565b50600293909355600580546001600160a01b039485166001600160a01b03199182161790915560038054938516938216939093179092556004805491909316911617905550620002da9050565b828054620000a9906200029e565b90600052602060002090601f016020900481019282620000cd576000855562000118565b82601f10620000e857805160ff191683800117855562000118565b8280016001018555821562000118579182015b8281111562000118578251825591602001919060010190620000fb565b50620001269291506200012a565b5090565b5b808211156200012657600081556001016200012b565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200016f57600080fd5b919050565b60008060008060008060c087890312156200018e57600080fd5b8651602080890151919750906001600160401b0380821115620001b057600080fd5b818a0191508a601f830112620001c557600080fd5b815181811115620001da57620001da62000141565b604051601f8201601f19908116603f0116810190838211818310171562000205576200020562000141565b816040528281528d868487010111156200021e57600080fd5b600093505b8284101562000242578484018601518185018701529285019262000223565b82841115620002545760008684830101525b809a5050505050505060408701519350620002726060880162000157565b9250620002826080880162000157565b91506200029260a0880162000157565b90509295509295509295565b600181811c90821680620002b357607f821691505b602082108103620002d457634e487b7160e01b600052602260045260246000fd5b50919050565b6122f480620002ea6000396000f3fe60806040526004361061007b5760003560e01c8063a873ac501161004e578063a873ac5014610119578063c2a3e37514610146578063f7b2ec0d14610168578063fa540801146101ad57600080fd5b80635220431c1461008057806355dc9245146100a257806366605ba4146100d857806377eff545146100eb575b600080fd5b34801561008c57600080fd5b506100a061009b366004611190565b6101cd565b005b3480156100ae57600080fd5b506100c26100bd3660046111d2565b610507565b6040516100cf91906112ae565b60405180910390f35b6100a06100e63660046112c1565b610742565b3480156100f757600080fd5b5061010b610106366004611345565b6108bb565b6040519081526020016100cf565b34801561012557600080fd5b506101396101343660046111d2565b610901565b6040516100cf919061144f565b34801561015257600080fd5b5061015b610d11565b6040516100cf9190611563565b34801561017457600080fd5b506101886101833660046115bd565b610da3565b604080516001600160a01b0390941684526020840192909252908201526060016100cf565b3480156101b957600080fd5b5061010b6101c83660046111d2565b610e39565b6003546040516331a9108f60e11b8152823560048201526000916001600160a01b031690636352211e90602401602060405180830381865afa158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b9190611671565b90506001600160a01b0381166102915760405162461bcd60e51b81526020600482015260166024820152751b9bc81bdb99481bdddb9cc81d1a1a5cc81ddbdc9b1960521b60448201526064015b60405180910390fd5b6004546001600160a01b031633146103925760006102d183356102b7602086018661168e565b6102c460408701876116af565b61010660608801886116af565b90506000610320826102e660808701876116c5565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610da392505050565b50509050826001600160a01b0316816001600160a01b03161461038f5760405162461bcd60e51b815260206004820152602160248201527f776f726c64206f776e6572206d757374207369676e20646567656e20736176656044820152607360f81b6064820152608401610288565b50505b813560009081526007602052604081208054916103ae83611729565b909155506103c19050602083018361168e565b823560009081526006602052604090206103db8282611a99565b506103eb905060408301836116af565b823560009081526006602052604090206004016104088282611d34565b50610418905060608301836116af565b823560009081526006602052604090206005016104358282611d34565b506000905061044a60e0840160c08501611e11565b905060005b61045c60a0850185611765565b90508110156104b15761049f843561047760a0870187611765565b8481811061048757610487611e2e565b90506020028101906104999190611e44565b84610e8c565b806104a981611729565b91505061044f565b5082356000818152600760205260409020547f2bf1fe9b5c364d4737c1ebdb157df8daab04aedc6bfa7894b3085747317b05ab906104f190600190611e5a565b60405190815260200160405180910390a2505050565b60408051602081019091526060815260035460405163270a910f60e01b81526004810184905283916001600160a01b03169063270a910f90602401602060405180830381865afa15801561055f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105839190611671565b6001600160a01b0316336001600160a01b0316146106095760405162461bcd60e51b815260206004820152603f60248201527f6f6e6c7920746865206f776e6572206f662074686520646567656e206f72206960448201527f747320776f726c642063616e2063616c6c20746869732066756e6374696f6e006064820152608401610288565b6000838152600660209081526040808320815160049091018054808502830184018452938201848152919390928492918491879085015b8282101561070e5783829060005260206000209060020201604051806040016040529081600082018054610673906117c5565b80601f016020809104026020016040519081016040528092919081815260200182805461069f906117c5565b80156106ec5780601f106106c1576101008083540402835291602001916106ec565b820191906000526020600020905b8154815290600101906020018083116106cf57829003601f168201915b5050505050815260200160018201548152505081526020019060010190610640565b5050509152505060008581526006602052604081209192506004909101906107368282610fb1565b50909250505b50919050565b600480546000546040516331a9108f60e11b8152928301526001600160a01b031690636352211e90602401602060405180830381865afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae9190611671565b6001600160a01b0316336001600160a01b0316146108295760405162461bcd60e51b815260206004820152603260248201527f6f6e6c7920746865206f776e6572206f662074686520646567656e2063616e2060448201527131b0b636103a3434b990333ab731ba34b7b760711b6064820152608401610288565b6002548034101561086f5760405162461bcd60e51b815260206004820152601060248201526f1c185e5b595b9d081c995c5d5a5c995960821b6044820152606401610288565b6005546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156108a8573d6000803e3d6000fd5b506108b560018484610fd5565b50505050565b60008481526007602090815260408083205490516108e192879187918791309101612198565b604051602081830303815290604052805190602001209050949350505050565b610909611059565b6000828152600660209081526040808320815161012081018352815461ffff80821660e08401908152620100009283900482166101008501526060808501918252865160808181018952600188015480861683529586048516828b015264010000000086048516828a0152660100000000000090950490931690830152918301526002830180548551818802810188019096528086529296939587959294879460a0880194939290919084015b82821015610a8857838290600052602060002090600202016040518060400160405290816000820180546109e9906117c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610a15906117c5565b8015610a625780601f10610a3757610100808354040283529160200191610a62565b820191906000526020600020905b815481529060010190602001808311610a4557829003601f168201915b505050918352505060019182015461ffff166020918201529183529290920191016109b6565b505050908252506040805160c0810182526003939093015461ffff8082168552620100008204811660208087019190915264010000000083048216868501526601000000000000830482166060870152600160401b83049091166080860152600160501b90910460ff16151560a0850152918201929092529183528051600485018054808502830184018452828501818152959094019491939092849291849160009085015b82821015610bfc5783829060005260206000209060020201604051806040016040529081600082018054610b61906117c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8d906117c5565b8015610bda5780601f10610baf57610100808354040283529160200191610bda565b820191906000526020600020905b815481529060010190602001808311610bbd57829003601f168201915b5050505050815260200160018201548152505081526020019060010190610b2e565b5050509152505081526040805160058401805460208181028401850185528381018281529501949293919284929091849160009085015b82821015610d015783829060005260206000209060020201604051806040016040529081600082018054610c66906117c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610c92906117c5565b8015610cdf5780601f10610cb457610100808354040283529160200191610cdf565b820191906000526020600020905b815481529060010190602001808311610cc257829003601f168201915b5050505050815260200160018201548152505081526020019060010190610c33565b5050509152505090525092915050565b606060018054610d20906117c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4c906117c5565b8015610d995780601f10610d6e57610100808354040283529160200191610d99565b820191906000526020600020905b815481529060010190602001808311610d7c57829003601f168201915b5050505050905090565b600080600080610db286610e39565b90506000806000610dc288610f82565b604080516000808252602082018084528a905260ff861692820192909252606081018490526080810183905293965091945092509060019060a0016020604051602081039080840390855afa158015610e1f573d6000803e3d6000fd5b5050604051601f1901519b95995094975050505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b604051636ef29c1f60e11b8152823560048201526000906001600160a01b0383169063dde5383e90602401608060405180830381865afa158015610ed4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef891906121f2565b60608101519091506001600160a01b038116630b5f826b86610f1d60208801886116af565b610f2a60408901896116c5565b6040518563ffffffff1660e01b8152600401610f499493929190612267565b600060405180830381600087803b158015610f6357600080fd5b505af1158015610f77573d6000803e3d6000fd5b505050505050505050565b60008060008351604114610f9557600080fd5b5050506020810151604082015160609092015160001a92909190565b5080546000825560020290600052602060002090810190610fd2919061111d565b50565b828054610fe1906117c5565b90600052602060002090601f0160209004810192826110035760008555611049565b82601f1061101c5782800160ff19823516178555611049565b82800160010185558215611049579182015b8281111561104957823582559160200191906001019061102e565b50611055929150611141565b5090565b60405180606001604052806110e26040805160c080820183526000608080840182815260a08086018490529085528551808301875283815260208082018590528188018590526060808301869052818801929092528688018290528751958601885284865285018490529584018390528386018390529083018290528201529181019190915290565b81526020016110fd6040518060200160405280606081525090565b81526020016111186040518060200160405280606081525090565b905290565b808211156110555760006111318282611156565b506000600182015560020161111d565b5b808211156110555760008155600101611142565b508054611162906117c5565b6000825580601f10611172575050565b601f016020900490600052602060002090810190610fd29190611141565b6000602082840312156111a257600080fd5b813567ffffffffffffffff8111156111b957600080fd5b820160e081850312156111cb57600080fd5b9392505050565b6000602082840312156111e457600080fd5b5035919050565b6000815180845260005b81811015611211576020818501810151868301820152016111f5565b81811115611223576000602083870101525b50601f01601f19169290920160200192915050565b8051602080845281518482018190526000926040919083019082870190600581901b88018401865b828110156112a157898203603f1901845284518051878452611284888501826111eb565b918901519389019390935294870194938701939150600101611260565b5098975050505050505050565b6020815260006111cb6020830184611238565b600080602083850312156112d457600080fd5b823567ffffffffffffffff808211156112ec57600080fd5b818501915085601f83011261130057600080fd5b81358181111561130f57600080fd5b86602082850101111561132157600080fd5b60209290920196919550909350505050565b60006020828403121561073c57600080fd5b6000806000806080858703121561135b57600080fd5b84359350602085013567ffffffffffffffff8082111561137a57600080fd5b908601906101a0828903121561138f57600080fd5b909350604086013590808211156113a557600080fd5b6113b188838901611333565b935060608701359150808211156113c757600080fd5b506113d487828801611333565b91505092959194509250565b600081518084526020808501808196508360051b8101915082860160005b85811015611442578284038952815160408151818752611420828801826111eb565b9288015161ffff169688019690965250988501989350908401906001016113fe565b5091979650505050505050565b600060208083528351606082850152805161ffff80825116608087015280848301511660a08701528383015191508082511660c087015280848301511660e08701528060408301511661010087015280606083015116610120870152505060408101516101a06101408601526114c96102208601826113e0565b606092830151805161ffff9081166101608901526020820151811661018089015260408083015182166101a08a01529482015181166101c08901526080820151166101e088015260a00151151561020087015292860151858403601f199081019387019390935292905061153d8184611238565b9250506040850151818584030160608601526115598382611238565b9695505050505050565b6020815260006111cb60208301846111eb565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156115b5576115b5611576565b604052919050565b600080604083850312156115d057600080fd5b8235915060208084013567ffffffffffffffff808211156115f057600080fd5b818601915086601f83011261160457600080fd5b81358181111561161657611616611576565b611628601f8201601f1916850161158c565b9150808252878482850101111561163e57600080fd5b80848401858401376000848284010152508093505050509250929050565b6001600160a01b0381168114610fd257600080fd5b60006020828403121561168357600080fd5b81516111cb8161165c565b6000823561019e198336030181126116a557600080fd5b9190910192915050565b60008235601e198336030181126116a557600080fd5b6000808335601e198436030181126116dc57600080fd5b83018035915067ffffffffffffffff8211156116f757600080fd5b60200191503681900382131561170c57600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b60006001820161173b5761173b611713565b5060010190565b61ffff81168114610fd257600080fd5b6000813561175f81611742565b92915050565b6000808335601e1984360301811261177c57600080fd5b83018035915067ffffffffffffffff82111561179757600080fd5b6020019150600581901b360382131561170c57600080fd5b60008235603e198336030181126116a557600080fd5b600181811c908216806117d957607f821691505b60208210810361073c57634e487b7160e01b600052602260045260246000fd5b5b8181101561180e57600081556001016117fa565b5050565b61181c81546117c5565b801561180e57601f81116001811461183657505060009055565b826000526020600020611854601f840160051c8201600183016117f9565b5060206000908120818555555b505050565b601f82111561186157806000526020600020601f840160051c8101602085101561188d5750805b61189f601f850160051c8301826117f9565b5050505050565b6118b082836116c5565b67ffffffffffffffff8111156118c8576118c8611576565b6118dc816118d685546117c5565b85611866565b6000601f82116001811461191057600083156118f85750838201355b600019600385901b1c1916600184901b17855561196a565b600085815260209020601f19841690835b828110156119415786850135825560209485019460019092019101611921565b508482101561195e5760001960f88660031b161c19848701351681555b505060018360011b0185555b5050505061180e61197d60208401611752565b6001830161ffff821661ffff198254161781555050565b8015158114610fd257600080fd5b81356119ad81611742565b815461ffff191661ffff82161782555060208201356119cb81611742565b815463ffff00001916601082901b63ffff0000161782555060408201356119f181611742565b815465ffff000000001916602082901b65ffff0000000016178255506060820135611a1b81611742565b815467ffff0000000000001916603082901b67ffff00000000000016178255506080820135611a4981611742565b815461ffff60401b8260401b1691508161ffff60401b19821617835560a0840135611a7381611994565b6affffff0000000000000000199190911690911790151560501b60ff60501b1617905550565b8135611aa481611742565b815461ffff191661ffff821617825550602080830135611ac381611742565b825463ffff00001916601082901b63ffff0000161783555060018083016040850135611aee81611742565b815461ffff191661ffff8216178255506060850135611b0c81611742565b815463ffff00001916601082901b63ffff000016178255506080850135611b3281611742565b815465ffff000000001916602082901b65ffff00000000161782555060a0850135611b5c81611742565b815467ffff0000000000001916603082901b67ffff0000000000001617825550506002808401611b8f60c0870187611765565b600160401b811115611ba357611ba3611576565b825481845580821015611c14576001600160ff1b03808211871615611bca57611bca611713565b808311871615611bdc57611bdc611713565b50600084815287812083881b81019083891b015b80821015611c1057611c0182611812565b82898301558782019150611bf0565b5050505b506000928352602083209282905b82811015611c4c57611c3d611c3783866117af565b866118a6565b93850193908701908601611c22565b505050505050505061180e60e08301600383016119a2565b611c6e82836116c5565b67ffffffffffffffff811115611c8657611c86611576565b611c94816118d685546117c5565b6000601f821160018114611cc85760008315611cb05750838201355b600019600385901b1c1916600184901b178555611d22565b600085815260209020601f19841690835b82811015611cf95786850135825560209485019460019092019101611cd9565b5084821015611d165760001960f88660031b161c19848701351681555b505060018360011b0185555b50505050602082013560018201555050565b611d3e8283611765565b600160401b811115611d5257611d52611576565b825481845580821015611dca576001600160ff1b036001818311811615611d7b57611d7b611713565b818411811615611d8d57611d8d611713565b60008681526020812090925084821b81019084831b015b80821015611dc557611db582611812565b8383830155600282019150611da4565b505050505b5060008381526020812083915b83811015611e0857611df2611dec84876117af565b83611c64565b6020929092019160029190910190600101611dd7565b50505050505050565b600060208284031215611e2357600080fd5b81356111cb8161165c565b634e487b7160e01b600052603260045260246000fd5b60008235605e198336030181126116a557600080fd5b600082821015611e6c57611e6c611713565b500390565b6000808335601e19843603018112611e8857600080fd5b830160208101925035905067ffffffffffffffff811115611ea857600080fd5b8060051b360383131561170c57600080fd5b6000808335601e19843603018112611ed157600080fd5b830160208101925035905067ffffffffffffffff811115611ef157600080fd5b80360383131561170c57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e19833603018112611f3f57600080fd5b90910192915050565b81835260006020808501808196508560051b810191508460005b87811015611442578284038952611f798288611f29565b6040611f858283611eba565b828852611f958389018284611f00565b92505050868201359150611fa882611742565b61ffff91909116948601949094529784019790840190600101611f62565b8035611fd181611742565b61ffff9081168352602082013590611fe882611742565b9081166020840152604082013590611fff82611742565b908116604084015260608201359061201682611742565b908116606084015260808201359061202d82611742565b16608083015260a081013561204181611994565b80151560a0840152505050565b60006101a0823561205e81611742565b61ffff908116855260208401359061207582611742565b908116602086015260408401359061208c82611742565b90811660408601526060840135906120a382611742565b90811660608601526080840135906120ba82611742565b908116608086015260a0840135906120d182611742565b1660a08501526120e460c0840184611e71565b8260c08701526120f78387018284611f48565b925050506111cb60e0850160e08501611fc6565b6000602080840161211c8485611e71565b83875291829052604091828701600582901b880184018360005b84811015612189578a8303603f190184526121518287611f29565b61215b8182611eba565b89865261216b8a87018284611f00565b928b0135958b01959095525093880193925090870190600101612136565b50909998505050505050505050565b85815260a0602082015260006121b160a083018761204e565b82810360408401526121c3818761210b565b905082810360608401526121d7818661210b565b91505060018060a01b03831660808301529695505050505050565b60006080828403121561220457600080fd5b6040516080810181811067ffffffffffffffff8211171561222757612227611576565b604052825161223581611742565b808252506020830151602082015260408301516040820152606083015161225b8161165c565b60608201529392505050565b848152606060208201526000843561019e1986360301811261228857600080fd5b6020606084015261229e6080840187830161204e565b905082810360408401526122b3818587611f00565b97965050505050505056fea26469706673582212202a0722bde3a84ce6a71cd5deb76f9bd347543849e30c5dab0592b31cce74b44864736f6c634300080d0033";

type DegenDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DegenDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DegenData__factory extends ContractFactory {
  constructor(...args: DegenDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _id: BigNumberish,
    _name: string,
    _renameCost: BigNumberish,
    _worlds: string,
    _degens: string,
    _payments: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DegenData> {
    return super.deploy(
      _id,
      _name,
      _renameCost,
      _worlds,
      _degens,
      _payments,
      overrides || {}
    ) as Promise<DegenData>;
  }
  override getDeployTransaction(
    _id: BigNumberish,
    _name: string,
    _renameCost: BigNumberish,
    _worlds: string,
    _degens: string,
    _payments: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _id,
      _name,
      _renameCost,
      _worlds,
      _degens,
      _payments,
      overrides || {}
    );
  }
  override attach(address: string): DegenData {
    return super.attach(address) as DegenData;
  }
  override connect(signer: Signer): DegenData__factory {
    return super.connect(signer) as DegenData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DegenDataInterface {
    return new utils.Interface(_abi) as DegenDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DegenData {
    return new Contract(address, _abi, signerOrProvider) as DegenData;
  }
}
