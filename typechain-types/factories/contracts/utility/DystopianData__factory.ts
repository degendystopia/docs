/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DystopianData,
  DystopianDataInterface,
} from "../../../contracts/utility/DystopianData";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_renameCost",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_worlds",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dystopians",
        type: "address",
      },
      {
        internalType: "address",
        name: "_payments",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "world",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "DystopianDataUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "bytes32ToLiteralString",
    outputs: [
      {
        internalType: "string",
        name: "result",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_world",
        type: "uint256",
      },
    ],
    name: "getDystopianData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "x",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "y",
                    type: "uint16",
                  },
                ],
                internalType: "struct Position",
                name: "pos",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "maxHealth",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "maxEnergy",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "speed",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "range",
                    type: "uint16",
                  },
                ],
                internalType: "struct Stats",
                name: "stats",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "uint16",
                    name: "level",
                    type: "uint16",
                  },
                ],
                internalType: "struct Skill[]",
                name: "skills",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "curHealth",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "curEnergy",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "deaths",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "kills",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "murders",
                    type: "uint16",
                  },
                  {
                    internalType: "bool",
                    name: "isCriminal",
                    type: "bool",
                  },
                ],
                internalType: "struct Status",
                name: "status",
                type: "tuple",
              },
            ],
            internalType: "struct Character",
            name: "char",
            type: "tuple",
          },
        ],
        internalType: "struct Dystopian",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDystopianName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_world",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "x",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "y",
                    type: "uint16",
                  },
                ],
                internalType: "struct Position",
                name: "pos",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "maxHealth",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "maxEnergy",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "speed",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "range",
                    type: "uint16",
                  },
                ],
                internalType: "struct Stats",
                name: "stats",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "uint16",
                    name: "level",
                    type: "uint16",
                  },
                ],
                internalType: "struct Skill[]",
                name: "skills",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "curHealth",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "curEnergy",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "deaths",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "kills",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "murders",
                    type: "uint16",
                  },
                  {
                    internalType: "bool",
                    name: "isCriminal",
                    type: "bool",
                  },
                ],
                internalType: "struct Status",
                name: "status",
                type: "tuple",
              },
            ],
            internalType: "struct Character",
            name: "char",
            type: "tuple",
          },
        ],
        internalType: "struct Dystopian",
        name: "_data",
        type: "tuple",
      },
    ],
    name: "getNextHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash_",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature_",
        type: "bytes",
      },
    ],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "rename",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_world",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "x",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "y",
                    type: "uint16",
                  },
                ],
                internalType: "struct Position",
                name: "pos",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "maxHealth",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "maxEnergy",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "speed",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "range",
                    type: "uint16",
                  },
                ],
                internalType: "struct Stats",
                name: "stats",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "uint16",
                    name: "level",
                    type: "uint16",
                  },
                ],
                internalType: "struct Skill[]",
                name: "skills",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "curHealth",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "curEnergy",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "deaths",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "kills",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "murders",
                    type: "uint16",
                  },
                  {
                    internalType: "bool",
                    name: "isCriminal",
                    type: "bool",
                  },
                ],
                internalType: "struct Status",
                name: "status",
                type: "tuple",
              },
            ],
            internalType: "struct Character",
            name: "char",
            type: "tuple",
          },
        ],
        internalType: "struct Dystopian",
        name: "_data",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_worldSignature",
        type: "bytes",
      },
    ],
    name: "updateDystopianData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d2338038062001d2383398101604081905262000034916200015e565b600086905584516200004e9060019060208801906200009b565b50600293909355600580546001600160a01b039485166001600160a01b03199182161790915560038054938516938216939093179092556004805491909316911617905550620002d59050565b828054620000a99062000282565b90600052602060002090601f016020900481019282620000cd576000855562000118565b82601f10620000e857805160ff191683800117855562000118565b8280016001018555821562000118579182015b8281111562000118578251825591602001919060010190620000fb565b50620001269291506200012a565b5090565b5b808211156200012657600081556001016200012b565b80516001600160a01b03811681146200015957600080fd5b919050565b60008060008060008060c0878903121562000177578182fd5b8651602080890151919750906001600160401b038082111562000198578485fd5b818a0191508a601f830112620001ac578485fd5b815181811115620001c157620001c1620002bf565b604051601f8201601f19908116603f01168101908382118183101715620001ec57620001ec620002bf565b816040528281528d8684870101111562000204578788fd5b8793505b8284101562000227578484018601518185018701529285019262000208565b828411156200023857878684830101525b809a5050505050505060408701519350620002566060880162000141565b9250620002666080880162000141565b91506200027660a0880162000141565b90509295509295509295565b600181811c908216806200029757607f821691505b60208210811415620002b957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611a3e80620002e56000396000f3fe60806040526004361061007a5760003560e01c8063a40e8b241161004e578063a40e8b2414610109578063f7b2ec0d14610136578063fa5408011461017b578063fad171de1461019b57600080fd5b8062a4ec1e1461007f5780630171a9e1146100b25780630b5f826b146100d457806366605ba4146100f6575b600080fd5b34801561008b57600080fd5b5061009f61009a366004610ec1565b6101bb565b6040519081526020015b60405180910390f35b3480156100be57600080fd5b506100c76101fb565b6040516100a99190611180565b3480156100e057600080fd5b506100f46100ef366004610f06565b61028d565b005b6100f4610104366004610e81565b610511565b34801561011557600080fd5b50610129610124366004610db3565b61069d565b6040516100a991906111c1565b34801561014257600080fd5b50610156610151366004610dcb565b61089e565b604080516001600160a01b0390941684526020840192909252908201526060016100a9565b34801561018757600080fd5b5061009f610196366004610db3565b610934565b3480156101a757600080fd5b506100c76101b6366004610db3565b610987565b60008281526007602090815260408083205490516101dd928591309101611299565b60405160208183030381529060405280519060200120905092915050565b60606001805461020a906116da565b80601f0160208091040260200160405190810160405280929190818152602001828054610236906116da565b80156102835780601f1061025857610100808354040283529160200191610283565b820191906000526020600020905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b6003546040516331a9108f60e11b8152600481018690526000916001600160a01b031690636352211e9060240160206040518083038186803b1580156102d257600080fd5b505afa1580156102e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030a9190610d85565b90506001600160a01b0381166103605760405162461bcd60e51b81526020600482015260166024820152751b9bc81bdb99481bdddb9cc81d1a1a5cc81ddbdc9b1960521b60448201526064015b60405180910390fd5b6004546001600160a01b0316331461047f57600061037e86866101bb565b90506103c76040518060400160405280601781526020017f657870656374656420647973746f7069616e20686173680000000000000000008152506103c283610987565b610b57565b60006104098286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061089e92505050565b50509050826001600160a01b0316816001600160a01b03161461047c5760405162461bcd60e51b815260206004820152602560248201527f776f726c64206f776e6572206d757374207369676e20647973746f7069616e20604482015264736176657360d81b6064820152608401610357565b50505b60008581526007602052604081208054916104998361170f565b9091555050600085815260066020526040902084906104b88282611769565b505060008581526007602052604090205485907f1cea6d06287e900a58d4b42fdaf27c96f6070a7b3bbacc49df853eb7415f38ff906104f990600190611497565b60405190815260200160405180910390a25050505050565b600480546000546040516331a9108f60e11b8152928301526001600160a01b031690636352211e9060240160206040518083038186803b15801561055457600080fd5b505afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190610d85565b6001600160a01b0316336001600160a01b03161461060b5760405162461bcd60e51b815260206004820152603660248201527f6f6e6c7920746865206f776e6572206f662074686520647973746f7069616e2060448201527531b0b71031b0b636103a3434b990333ab731ba34b7b760511b6064820152608401610357565b600254803410156106515760405162461bcd60e51b815260206004820152601060248201526f1c185e5b595b9d081c995c5d5a5c995960821b6044820152606401610357565b6005546040516001600160a01b03909116904780156108fc02916000818181858888f1935050505015801561068a573d6000803e3d6000fd5b5061069760018484610bf0565b50505050565b6106a5610c74565b6000828152600660209081526040808320815160e081018352815461ffff80821660a084019081526201000092839004821660c0850152838701908152855160808101875260018601548084168252938404831681890152640100000000840483168188015266010000000000009093049091166060808401919091528386019290925260028401805486518189028101890190975280875293979496889692958895948801949184015b828210156108225783829060005260206000209060020201604051806040016040529081600082018054610783906116da565b80601f01602080910402602001604051908101604052809291908181526020018280546107af906116da565b80156107fc5780601f106107d1576101008083540402835291602001916107fc565b820191906000526020600020905b8154815290600101906020018083116107df57829003601f168201915b505050918352505060019182015461ffff16602091820152918352929092019101610750565b505050908252506040805160c0810182526003939093015461ffff8082168552620100008204811660208087019190915264010000000083048216938601939093526601000000000000820481166060860152600160401b8204166080850152600160501b900460ff16151560a0840152015290525092915050565b6000806000806108ad86610934565b905060008060006108bd88610ba0565b604080516000808252602082018084528a905260ff861692820192909252606081018490526080810183905293965091945092509060019060a0016020604051602081039080840390855afa15801561091a573d6000803e3d6000fd5b5050604051601f1901519b95995094975050505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b60408051604180825260808201909252606091600091906020820181803683370190505090506000805b6020811015610b4e5760006109c7826008611478565b86901b905060f881901c600f1660fc82901c60098111610a36576109ec816030611453565b60f81b866109f98761170f565b96508681518110610a1a57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610a87565b610a41816057611453565b60f81b86610a4e8761170f565b96508681518110610a6f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053505b60098260ff1611610ae757610a9d826030611453565b60f81b86610aaa8761170f565b96508681518110610acb57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610b38565b610af2826057611453565b60f81b86610aff8761170f565b96508681518110610b2057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053505b5050508080610b469061170f565b9150506109b1565b50909392505050565b610b9c8282604051602401610b6d929190611193565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b179052610bcf565b5050565b60008060008351604114610bb357600080fd5b5050506020810151604082015160609092015160001a92909190565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054610bfc906116da565b90600052602060002090601f016020900481019282610c1e5760008555610c64565b82601f10610c375782800160ff19823516178555610c64565b82800160010185558215610c64579182015b82811115610c64578235825591602001919060010190610c49565b50610c70929150610d02565b5090565b6040518060200160405280610cfd6040805160c080820183526000608080840182815260a08086018490529085528551808301875283815260208082018590528188018590526060808301869052818801929092528688018290528751958601885284865285018490529584018390528386018390529083018290528201529181019190915290565b905290565b5b80821115610c705760008155600101610d03565b60008083601f840112610d28578182fd5b50813567ffffffffffffffff811115610d3f578182fd5b602083019150836020828501011115610d5757600080fd5b9250929050565b600060208284031215610d6f578081fd5b50919050565b8035610d80816119f8565b919050565b600060208284031215610d96578081fd5b81516001600160a01b0381168114610dac578182fd5b9392505050565b600060208284031215610dc4578081fd5b5035919050565b60008060408385031215610ddd578081fd5b82359150602083013567ffffffffffffffff80821115610dfb578283fd5b818501915085601f830112610e0e578283fd5b813581811115610e2057610e20611740565b604051601f8201601f19908116603f01168101908382118183101715610e4857610e48611740565b81604052828152886020848701011115610e60578586fd5b82602086016020830137856020848301015280955050505050509250929050565b60008060208385031215610e93578182fd5b823567ffffffffffffffff811115610ea9578283fd5b610eb585828601610d17565b90969095509350505050565b60008060408385031215610ed3578182fd5b82359150602083013567ffffffffffffffff811115610ef0578182fd5b610efc85828601610d5e565b9150509250929050565b60008060008060608587031215610f1b578182fd5b84359350602085013567ffffffffffffffff80821115610f39578384fd5b610f4588838901610d5e565b94506040870135915080821115610f5a578384fd5b50610f6787828801610d17565b95989497509550505050565b60008383855260208086019550808560051b83010184845b8781101561103c57601f1980868503018a528235603e19893603018112610fb0578788fd5b88016040813536839003601e19018112610fc857898afd5b8201803567ffffffffffffffff811115610fe0578a8bfd5b803603841315610fee578a8bfd5b82885280838901526060925080898301848a01378a83828a010152611014898501610d75565b61ffff16898901529c88019c601f019390931690950190940193505090830190600101610f8b565b5090979650505050505050565b600082825180855260208086019550808260051b840101818601855b8481101561103c57601f1986840301895281516040815181865261108b828701826110ad565b9287015161ffff16958701959095525098840198925090830190600101611065565b60008151808452815b818110156110d2576020818501810151868301820152016110b6565b818111156110e35782602083870101525b50601f01601f19169290920160200192915050565b8035611103816119f8565b61ffff908116835260208201359061111a826119f8565b9081166020840152604082013590611131826119f8565b9081166040840152606082013590611148826119f8565b908116606084015260808201359061115f826119f8565b16608083015260a0810135611173816119e7565b80151560a0840152505050565b602081526000610dac60208301846110ad565b6040815260006111a660408301856110ad565b82810360208401526111b881856110ad565b95945050505050565b6000602080835283518182850152805161ffff808251166040870152808483015116606087015283830151915080825116608087015280848301511660a08701528060408301511660c08701528060608301511660e08701525050604081015191506101a061010085015261123a6101e0850183611049565b606091820151805161ffff908116610120880152602082015181166101408801526040820151811661016088015292810151831661018087015260808101519092166101a086015260a082015115156101c08601529150509392505050565b838152606060208201526000833561019e198536030181126112b9578182fd5b60206060840152840180356112cd816119f8565b61ffff90811660808501526020820135906112e7826119f8565b90811660a08501526040820135906112fe826119f8565b90811660c0850152606082013590611315826119f8565b90811660e085015260808201359061132c826119f8565b90811661010085015260a082013590611344826119f8565b1661012084015261135860c082018261140b565b6101a061014086015261137061022086018284610f73565b915050611384610160850160e084016110f8565b6001600160a01b0385166040850152915061139c9050565b949350505050565b6000808335601e198436030181126113ba578283fd5b83018035915067ffffffffffffffff8211156113d4578283fd5b6020019150600581901b3603821315610d5757600080fd5b60008235603e19833603018112611401578182fd5b9190910192915050565b6000808335601e19843603018112611421578283fd5b830160208101925035905067ffffffffffffffff81111561144157600080fd5b8060051b3603831315610d5757600080fd5b600060ff821660ff84168060ff038211156114705761147061172a565b019392505050565b60008160001904831182151516156114925761149261172a565b500290565b6000828210156114a9576114a961172a565b500390565b5b81811015610b9c57600081556001016114af565b600160401b8311156114d7576114d7611740565b80548382558084101561159d576001600160ff1b0360018183118116156115005761150061172a565b8186118116156115125761151261172a565b60008481526020812090925086821b81019084831b015b8082101561159857815461153c816116da565b801561158657601f808211600181146115585760008655611583565b60008681526020902061157483850160051c82018983016114ae565b50600086815260208120818855555b50505b50508383830155600282019150611529565b505050505b5060008181526020812083915b858110156115db576115c56115bf84876113ec565b83611894565b60209290920191600291909101906001016115aa565b505050505050565b81356115ee816119f8565b815461ffff191661ffff821617825550602082013561160c816119f8565b815463ffff00001916601082901b63ffff000016178255506040820135611632816119f8565b815465ffff000000001916602082901b65ffff000000001617825550606082013561165c816119f8565b815467ffff0000000000001916603082901b67ffff0000000000001617825550608082013561168a816119f8565b815461ffff60401b8260401b1691508161ffff60401b19821617835560a08401356116b4816119e7565b6affffff0000000000000000199190911690911790151560501b60ff60501b1617905550565b600181811c908216806116ee57607f821691505b60208210811415610d6f57634e487b7160e01b600052602260045260246000fd5b60006000198214156117235761172361172a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60008135611763816119f8565b92915050565b813561019e1983360301811261177e57600080fd5b8201803561178b816119f8565b825461ffff191661ffff82161783555060208101356117a9816119f8565b825463ffff00001916601082901b63ffff000016178355506001820160408201356117d3816119f8565b815461ffff191661ffff82161782555060608201356117f1816119f8565b815463ffff00001916601082901b63ffff000016178255506080820135611817816119f8565b815465ffff000000001916602082901b65ffff00000000161782555060a0820135611841816119f8565b815467ffff0000000000001916603082901b67ffff00000000000016178255505061186f60c08201826113a4565b61187d8183600287016114c3565b505061188f60e08201600384016115e3565b505050565b8135601e198336030181126118a857600080fd5b8201803567ffffffffffffffff8111156118c157600080fd5b602081360381840113156118d457600080fd5b6118de84546116da565b600080601f8511601f8411818117156118fd5760008981526020902092505b801561192b57601f870160051c8301868810156119175750825b611929601f870160051c8501826114ae565b505b508060018114611961576000945086156119485785848901013594505b600187901b600019600389901b1c1986161789556119b6565b601f198716945082845b8681101561198c57898601880135825594870194600190910190870161196b565b50878610156119ab5760001960f88960031b161c1987868b0101351681555b5060018760011b0189555b50505050506119e06119c9828701611756565b6001860161ffff821661ffff198254161781555050565b5050505050565b80151581146119f557600080fd5b50565b61ffff811681146119f557600080fdfea2646970667358221220420859a0ce28668410e6e60a6deb2fa95901bf8638ccb0e62127c82a7ad76e6f64736f6c63430008040033";

type DystopianDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DystopianDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DystopianData__factory extends ContractFactory {
  constructor(...args: DystopianDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _id: BigNumberish,
    _name: string,
    _renameCost: BigNumberish,
    _worlds: string,
    _dystopians: string,
    _payments: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DystopianData> {
    return super.deploy(
      _id,
      _name,
      _renameCost,
      _worlds,
      _dystopians,
      _payments,
      overrides || {}
    ) as Promise<DystopianData>;
  }
  override getDeployTransaction(
    _id: BigNumberish,
    _name: string,
    _renameCost: BigNumberish,
    _worlds: string,
    _dystopians: string,
    _payments: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _id,
      _name,
      _renameCost,
      _worlds,
      _dystopians,
      _payments,
      overrides || {}
    );
  }
  override attach(address: string): DystopianData {
    return super.attach(address) as DystopianData;
  }
  override connect(signer: Signer): DystopianData__factory {
    return super.connect(signer) as DystopianData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DystopianDataInterface {
    return new utils.Interface(_abi) as DystopianDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DystopianData {
    return new Contract(address, _abi, signerOrProvider) as DystopianData;
  }
}
