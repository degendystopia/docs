/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WorldTreasury,
  WorldTreasuryInterface,
} from "../../../contracts/utility/WorldTreasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_worlds",
        type: "address",
      },
      {
        internalType: "address",
        name: "_degens",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "degen",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "degenOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "TokenRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_degen",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_worldSignature",
        type: "bytes",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_degen",
        type: "uint256",
      },
    ],
    name: "getNextHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token",
        type: "string",
      },
    ],
    name: "getRegisteredToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash_",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature_",
        type: "bytes",
      },
    ],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token",
        type: "string",
      },
    ],
    name: "getWorldBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "registerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051620017d8380380620017d883398101604081905261003191610084565b600092909255600180546001600160a01b039283166001600160a01b031991821617909155600280549290931691161790556100c0565b80516001600160a01b038116811461007f57600080fd5b919050565b60008060006060848603121561009957600080fd5b835192506100a960208501610068565b91506100b760408501610068565b90509250925092565b61170880620000d06000396000f3fe6080604052600436106100745760003560e01c8063b87188791161004e578063b8718879146100f5578063c89b446d1461012d578063f7b2ec0d1461014d578063fa5408011461019257600080fd5b8063549dd8c31461008057806369f667ed146100a25780637431cd4d146100c257600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b366004610fe9565b6101b2565b005b3480156100ae57600080fd5b506100a06100bd36600461116d565b6106e9565b3480156100ce57600080fd5b506100e26100dd3660046111bf565b6108f2565b6040519081526020015b60405180910390f35b34801561010157600080fd5b506101156101103660046111d8565b610936565b6040516001600160a01b0390911681526020016100ec565b34801561013957600080fd5b506100e261014836600461121a565b61096b565b34801561015957600080fd5b5061016d610168366004611257565b610a07565b604080516001600160a01b0390941684526020840192909252908201526060016100ec565b34801561019e57600080fd5b506100e26101ad3660046111bf565b610a9d565b6002546040516331a9108f60e11b81526004810185905284916001600160a01b031690636352211e90602401602060405180830381865afa1580156101fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021f91906112b2565b6001600160a01b0316336001600160a01b03161461029f5760405162461bcd60e51b815260206004820152603260248201527f6f6e6c7920746865206f776e6572206f662074686520646567656e2063616e2060448201527131b0b636103a3434b990333ab731ba34b7b760711b60648201526084015b60405180910390fd5b60408051808201909152601a81527f636c61696d696e67207265776172647320666f7220646567656e00000000000060208201526102df90853331610af0565b6002546040516331a9108f60e11b8152600481018690526000916001600160a01b031690636352211e90602401602060405180830381865afa158015610329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034d91906112b2565b90506001600160a01b0381166103b55760405162461bcd60e51b815260206004820152602760248201527f6e6f206f6e65206f776e73207468697320646567656e2028776173206974206260448201526675726e65643f2960c81b6064820152608401610296565b60025460405163501be55960e11b8152600481018790526000916001600160a01b03169063a037cab290602401608060405180830381865afa1580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042391906112cf565b9050600081606001516001600160a01b03166355dc92456000546040518263ffffffff1660e01b815260040161045b91815260200190565b6000604051808303816000875af115801561047a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104a29190810190611374565b600154600080546040516331a9108f60e11b81526004810191909152929350916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051891906112b2565b90506001600160a01b0381166105695760405162461bcd60e51b81526020600482015260166024820152751b9bc81bdb99481bdddb9cc81d1a1a5cc81ddbdc9b1960521b6044820152606401610296565b6000610574896108f2565b905060006105b8828a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a0792505050565b50509050826001600160a01b0316816001600160a01b0316146106325760405162461bcd60e51b815260206004820152602c60248201527f746865206f776e6572206f662074686520776f726c64206d757374207369676e60448201526b207769746864726177616c7360a01b6064820152608401610296565b60008a81526004602052604090205461064a8b610b3c565b60005b8551518110156106975760008660000151828151811061066f5761066f6114da565b602002602001015190506106848d8a83610b68565b508061068f81611506565b91505061064d565b50866001600160a01b03168b7f3300bdb359cfb956935bca32e9db727413eab1ca84341f2e36caea85bb796968836040516106d491815260200190565b60405180910390a35050505050505050505050565b6001546000546040516331a9108f60e11b81526001600160a01b0390921691636352211e9161071e9160040190815260200190565b602060405180830381865afa15801561073b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075f91906112b2565b6001600160a01b0316336001600160a01b0316146107da5760405162461bcd60e51b815260206004820152603260248201527f6f6e6c7920746865206f776e6572206f662074686520776f726c642063616e2060448201527131b0b636103a3434b990333ab731ba34b7b760711b6064820152608401610296565b61080e604051806040016040528060118152602001703932b3b4b9ba32b934b733903a37b5b2b760791b8152508383610e28565b600082511161085f5760405162461bcd60e51b815260206004820152601b60248201527f63616e6e6f7420726567697374657220656d70747920746f6b656e00000000006044820152606401610296565b80600383604051610870919061151f565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091556108ab90839061151f565b6040519081900381206001600160a01b0383168252907f0fd4145e0bd1305ef15c2adcf308e601b33f5ccd4d010ae8270aa596a6b2d5949060200160405180910390a25050565b600081815260046020908152604091829020548251808301949094528383015230606080850191909152825180850390910181526080909301909152815191012090565b60006003838360405161094a92919061153b565b908152604051908190036020019020546001600160a01b0316905092915050565b6000815160000361097d575047919050565b60038260405161098d919061151f565b908152604051908190036020018120546370a0823160e01b82523060048301526001600160a01b0316906370a0823190602401602060405180830381865afa1580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a01919061154b565b92915050565b600080600080610a1686610a9d565b90506000806000610a2688610e6f565b604080516000808252602082018084528a905260ff861692820192909252606081018490526080810183905293965091945092509060019060a0016020604051602081039080840390855afa158015610a83573d6000803e3d6000fd5b5050604051601f1901519b95995094975050505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b610b37838383604051602401610b0893929190611590565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052610e9e565b505050565b600081815260046020526040902054610b569060016115b5565b60009182526004602052604090912055565b6000610b77826000015161096b565b9050610bc76040518060400160405280600d81526020016c776f726c642062616c616e636560981b8152508360000151604051806040016040528060018152602001601d60f91b81525084610ebf565b610c15604051806040016040528060098152602001681c995c5d595cdd195960ba1b8152508360000151604051806040016040528060018152602001601d60f91b8152508560200151610ebf565b8082602001511115610c695760405162461bcd60e51b815260206004820152601f60248201527f74726561737572792068617320696e73756666696369656e742066756e6473006044820152606401610296565b610ca6604051806040016040528060118152602001703bb4ba34323930bbb4b733903a37b5b2b760791b8152508584600001518560200151610f0e565b81515160009015610d21578251604051600391610cc29161151f565b908152604051908190036020019020546001600160a01b0316905080610d215760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b881b9bdd081c9959da5cdd195c995960621b6044820152606401610296565b825151600003610da557602083015160405133803192909181156108fc0291906000818181858888f19350505050158015610d60573d6000803e3d6000fd5b50610d9f6040518060400160405280600c81526020016b0eed2e8d0c8e4c2ee408aa8960a31b815250856020015183336001600160a01b031631610f57565b50610e21565b602083015160405163a9059cbb60e01b81526001600160a01b03868116600483015260248201929092529082169063a9059cbb906044016020604051808303816000875af1158015610dfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1f91906115cd565b505b5050505050565b610b37838383604051602401610e40939291906115ef565b60408051601f198184030181529190526020810180516001600160e01b03166395ed019560e01b179052610e9e565b60008060008351604114610e8257600080fd5b5050506020810151604082015160609092015160001a92909190565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610f0884848484604051602401610ed9949392919061162d565b60408051601f198184030181529190526020810180516001600160e01b0316639fd009f560e01b179052610e9e565b50505050565b610f0884848484604051602401610f289493929190611678565b60408051601f198184030181529190526020810180516001600160e01b031663a0c4b22560e01b179052610e9e565b610f0884848484604051602401610f7194939291906116a3565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b179052610e9e565b60008083601f840112610fb257600080fd5b50813567ffffffffffffffff811115610fca57600080fd5b602083019150836020828501011115610fe257600080fd5b9250929050565b600080600060408486031215610ffe57600080fd5b83359250602084013567ffffffffffffffff81111561101c57600080fd5b61102886828701610fa0565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b6040516020810167ffffffffffffffff8111828210171561106e5761106e611035565b60405290565b6040805190810167ffffffffffffffff8111828210171561106e5761106e611035565b604051601f8201601f1916810167ffffffffffffffff811182821017156110c0576110c0611035565b604052919050565b600067ffffffffffffffff8211156110e2576110e2611035565b50601f01601f191660200190565b60006111036110fe846110c8565b611097565b905082815283838301111561111757600080fd5b828260208301376000602084830101529392505050565b600082601f83011261113f57600080fd5b61114e838335602085016110f0565b9392505050565b6001600160a01b038116811461116a57600080fd5b50565b6000806040838503121561118057600080fd5b823567ffffffffffffffff81111561119757600080fd5b6111a38582860161112e565b92505060208301356111b481611155565b809150509250929050565b6000602082840312156111d157600080fd5b5035919050565b600080602083850312156111eb57600080fd5b823567ffffffffffffffff81111561120257600080fd5b61120e85828601610fa0565b90969095509350505050565b60006020828403121561122c57600080fd5b813567ffffffffffffffff81111561124357600080fd5b61124f8482850161112e565b949350505050565b6000806040838503121561126a57600080fd5b82359150602083013567ffffffffffffffff81111561128857600080fd5b8301601f8101851361129957600080fd5b6112a8858235602084016110f0565b9150509250929050565b6000602082840312156112c457600080fd5b815161114e81611155565b6000608082840312156112e157600080fd5b6040516080810181811067ffffffffffffffff8211171561130457611304611035565b8060405250825181526020830151602082015260408301516003811061132957600080fd5b6040820152606083015161133c81611155565b60608201529392505050565b60005b8381101561136357818101518382015260200161134b565b83811115610f085750506000910152565b6000602080838503121561138757600080fd5b825167ffffffffffffffff8082111561139f57600080fd5b81850191508282870312156113b357600080fd5b6113bb61104b565b8251828111156113ca57600080fd5b80840193505086601f8401126113df57600080fd5b8251828111156113f1576113f1611035565b8060051b611400868201611097565b918252848101860191868101908a84111561141a57600080fd5b87870192505b838310156114ca5782518681111561143757600080fd5b87016040818d03601f1901121561144d57600080fd5b611455611074565b898201518881111561146657600080fd5b8201603f81018e1361147757600080fd5b8a8101516114876110fe826110c8565b8181528f604083850101111561149c57600080fd5b6114ac828e830160408601611348565b83525050604091909101518982015282529187019190870190611420565b8452509198975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611518576115186114f0565b5060010190565b60008251611531818460208701611348565b9190910192915050565b8183823760009101908152919050565b60006020828403121561155d57600080fd5b5051919050565b6000815180845261157c816020860160208601611348565b601f01601f19169290920160200192915050565b6060815260006115a36060830186611564565b60208301949094525060400152919050565b600082198211156115c8576115c86114f0565b500190565b6000602082840312156115df57600080fd5b8151801515811461114e57600080fd5b6060815260006116026060830186611564565b82810360208401526116148186611564565b91505060018060a01b0383166040830152949350505050565b6080815260006116406080830187611564565b82810360208401526116528187611564565b905082810360408401526116668186611564565b91505082606083015295945050505050565b60808152600061168b6080830187611564565b85602084015282810360408401526116668186611564565b6080815260006116b66080830187611564565b602083019590955250604081019290925260609091015291905056fea264697066735822122024ae434127053e5c42e2fea6e474b87804ec6f6e48658c09c9e06655446df78a64736f6c634300080d0033";

type WorldTreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldTreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldTreasury__factory extends ContractFactory {
  constructor(...args: WorldTreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _id: BigNumberish,
    _worlds: string,
    _degens: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WorldTreasury> {
    return super.deploy(
      _id,
      _worlds,
      _degens,
      overrides || {}
    ) as Promise<WorldTreasury>;
  }
  override getDeployTransaction(
    _id: BigNumberish,
    _worlds: string,
    _degens: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_id, _worlds, _degens, overrides || {});
  }
  override attach(address: string): WorldTreasury {
    return super.attach(address) as WorldTreasury;
  }
  override connect(signer: Signer): WorldTreasury__factory {
    return super.connect(signer) as WorldTreasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldTreasuryInterface {
    return new utils.Interface(_abi) as WorldTreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorldTreasury {
    return new Contract(address, _abi, signerOrProvider) as WorldTreasury;
  }
}
