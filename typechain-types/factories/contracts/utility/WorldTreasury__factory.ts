/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WorldTreasury,
  WorldTreasuryInterface,
} from "../../../contracts/utility/WorldTreasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_worlds",
        type: "address",
      },
      {
        internalType: "address",
        name: "_degens",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "degen",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "degenOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "TokenRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_degen",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_worldSignature",
        type: "bytes",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_degen",
        type: "uint256",
      },
    ],
    name: "getNextHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token",
        type: "string",
      },
    ],
    name: "getRegisteredToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash_",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature_",
        type: "bytes",
      },
    ],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_token",
        type: "string",
      },
    ],
    name: "getWorldBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "registerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200184a3803806200184a833981016040819052620000349162000089565b600092909255600180546001600160a01b039283166001600160a01b03199182161790915560028054929093169116179055620000c9565b80516001600160a01b03811681146200008457600080fd5b919050565b6000806000606084860312156200009e578283fd5b83519250620000b0602085016200006c565b9150620000c0604085016200006c565b90509250925092565b61177180620000d96000396000f3fe6080604052600436106100745760003560e01c8063b87188791161004e578063b8718879146100f5578063c89b446d1461012d578063f7b2ec0d1461014d578063fa5408011461019257600080fd5b8063549dd8c31461008057806369f667ed146100a25780637431cd4d146100c257600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b36600461146c565b6101b2565b005b3480156100ae57600080fd5b506100a06100bd36600461129e565b610742565b3480156100ce57600080fd5b506100e26100dd3660046111b3565b61095a565b6040519081526020015b60405180910390f35b34801561010157600080fd5b50610115610110366004611223565b61099e565b6040516001600160a01b0390911681526020016100ec565b34801561013957600080fd5b506100e2610148366004611263565b6109d3565b34801561015957600080fd5b5061016d6101683660046111cb565b610a7f565b604080516001600160a01b0390941684526020840192909252908201526060016100ec565b34801561019e57600080fd5b506100e26101ad3660046111b3565b610b15565b6002546040516331a9108f60e11b81526004810185905284916001600160a01b031690636352211e9060240160206040518083038186803b1580156101f657600080fd5b505afa15801561020a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022e9190611177565b6001600160a01b0316336001600160a01b0316146102ae5760405162461bcd60e51b815260206004820152603260248201527f6f6e6c7920746865206f776e6572206f662074686520646567656e2063616e2060448201527131b0b636103a3434b990333ab731ba34b7b760711b60648201526084015b60405180910390fd5b60408051808201909152601a81527f636c61696d696e67207265776172647320666f7220646567656e00000000000060208201526102ee90853331610b68565b6002546040516331a9108f60e11b8152600481018690526000916001600160a01b031690636352211e9060240160206040518083038186803b15801561033357600080fd5b505afa158015610347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036b9190611177565b90506001600160a01b0381166103d35760405162461bcd60e51b815260206004820152602760248201527f6e6f206f6e65206f776e73207468697320646567656e2028776173206974206260448201526675726e65643f2960c81b60648201526084016102a5565b60025460405163501be55960e11b8152600481018790526000916001600160a01b03169063a037cab29060240160806040518083038186803b15801561041857600080fd5b505afa15801561042c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045091906112ee565b9050600081606001516001600160a01b03166355dc92456000546040518263ffffffff1660e01b815260040161048891815260200190565b600060405180830381600087803b1580156104a257600080fd5b505af11580156104b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104de9190810190611365565b600154600080546040516331a9108f60e11b81526004810191909152929350916001600160a01b0390911690636352211e9060240160206040518083038186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105639190611177565b90506001600160a01b0381166105b45760405162461bcd60e51b81526020600482015260166024820152751b9bc81bdb99481bdddb9cc81d1a1a5cc81ddbdc9b1960521b60448201526064016102a5565b60006105bf8961095a565b90506000610603828a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a7f92505050565b50509050826001600160a01b0316816001600160a01b03161461067d5760405162461bcd60e51b815260206004820152602c60248201527f746865206f776e6572206f662074686520776f726c64206d757374207369676e60448201526b207769746864726177616c7360a01b60648201526084016102a5565b60008a8152600460205260409020546106958b610bb4565b60005b8551518110156106f0576000866000015182815181106106c857634e487b7160e01b600052603260045260246000fd5b602002602001015190506106dd8d8a83610be0565b50806106e8816116dc565b915050610698565b50866001600160a01b03168b7f3300bdb359cfb956935bca32e9db727413eab1ca84341f2e36caea85bb7969688360405161072d91815260200190565b60405180910390a35050505050505050505050565b6001546000546040516331a9108f60e11b81526001600160a01b0390921691636352211e916107779160040190815260200190565b60206040518083038186803b15801561078f57600080fd5b505afa1580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c79190611177565b6001600160a01b0316336001600160a01b0316146108425760405162461bcd60e51b815260206004820152603260248201527f6f6e6c7920746865206f776e6572206f662074686520776f726c642063616e2060448201527131b0b636103a3434b990333ab731ba34b7b760711b60648201526084016102a5565b610876604051806040016040528060118152602001703932b3b4b9ba32b934b733903a37b5b2b760791b8152508383610eac565b60008251116108c75760405162461bcd60e51b815260206004820152601b60248201527f63616e6e6f7420726567697374657220656d70747920746f6b656e000000000060448201526064016102a5565b806003836040516108d891906114f2565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091556109139083906114f2565b6040519081900381206001600160a01b0383168252907f0fd4145e0bd1305ef15c2adcf308e601b33f5ccd4d010ae8270aa596a6b2d5949060200160405180910390a25050565b600081815260046020908152604091829020548251808301949094528383015230606080850191909152825180850390910181526080909301909152815191012090565b6000600383836040516109b29291906114e2565b908152604051908190036020019020546001600160a01b0316905092915050565b60008151600014156109e6575047919050565b6003826040516109f691906114f2565b908152604051908190036020018120546370a0823160e01b82523060048301526001600160a01b0316906370a082319060240160206040518083038186803b158015610a4157600080fd5b505afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190611454565b92915050565b600080600080610a8e86610b15565b90506000806000610a9e88610ef3565b604080516000808252602082018084528a905260ff861692820192909252606081018490526080810183905293965091945092509060019060a0016020604051602081039080840390855afa158015610afb573d6000803e3d6000fd5b5050604051601f1901519b95995094975050505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b610baf838383604051602401610b80939291906115c2565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b179052610f22565b505050565b600081815260046020526040902054610bce906001611698565b60009182526004602052604090912055565b6000610bef82600001516109d3565b9050610c3f6040518060400160405280600d81526020016c776f726c642062616c616e636560981b8152508360000151604051806040016040528060018152602001601d60f91b81525084610f43565b610c8d604051806040016040528060098152602001681c995c5d595cdd195960ba1b8152508360000151604051806040016040528060018152602001601d60f91b8152508560200151610f43565b8082602001511115610ce15760405162461bcd60e51b815260206004820152601f60248201527f74726561737572792068617320696e73756666696369656e742066756e64730060448201526064016102a5565b610d1e604051806040016040528060118152602001703bb4ba34323930bbb4b733903a37b5b2b760791b8152508584600001518560200151610f92565b81515160009015610d99578251604051600391610d3a916114f2565b908152604051908190036020019020546001600160a01b0316905080610d995760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b881b9bdd081c9959da5cdd195c995960621b60448201526064016102a5565b825151610e1a57602083015160405133803192909181156108fc0291906000818181858888f19350505050158015610dd5573d6000803e3d6000fd5b50610e146040518060400160405280600c81526020016b0eed2e8d0c8e4c2ee408aa8960a31b815250856020015183336001600160a01b031631610fdb565b50610ea5565b602083015160405163a9059cbb60e01b81526001600160a01b03868116600483015260248201929092529082169063a9059cbb90604401602060405180830381600087803b158015610e6b57600080fd5b505af1158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea39190611193565b505b5050505050565b610baf838383604051602401610ec49392919061150e565b60408051601f198184030181529190526020810180516001600160e01b03166395ed019560e01b179052610f22565b60008060008351604114610f0657600080fd5b5050506020810151604082015160609092015160001a92909190565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610f8c84848484604051602401610f5d949392919061154c565b60408051601f198184030181529190526020810180516001600160e01b0316639fd009f560e01b179052610f22565b50505050565b610f8c84848484604051602401610fac9493929190611597565b60408051601f198184030181529190526020810180516001600160e01b031663a0c4b22560e01b179052610f22565b610f8c84848484604051602401610ff594939291906115e7565b60408051601f198184030181529190526020810180516001600160e01b03166304772b3360e11b179052610f22565b600061103761103284611670565b61163f565b905082815283838301111561104b57600080fd5b828260208301376000602084830101529392505050565b60008083601f840112611073578182fd5b50813567ffffffffffffffff81111561108a578182fd5b6020830191508360208285010111156110a257600080fd5b9250929050565b600082601f8301126110b9578081fd5b6110c883833560208501611024565b9392505050565b6000604082840312156110e0578081fd5b6040516040810167ffffffffffffffff82821081831117156111045761110461170d565b81604052829350845191508082111561111c57600080fd5b508301601f8101851361112e57600080fd5b805161113c61103282611670565b81815286602083850101111561115157600080fd5b6111628260208301602086016116b0565b83525050602092830151920191909152919050565b600060208284031215611188578081fd5b81516110c881611723565b6000602082840312156111a4578081fd5b815180151581146110c8578182fd5b6000602082840312156111c4578081fd5b5035919050565b600080604083850312156111dd578081fd5b82359150602083013567ffffffffffffffff8111156111fa578182fd5b8301601f8101851361120a578182fd5b61121985823560208401611024565b9150509250929050565b60008060208385031215611235578182fd5b823567ffffffffffffffff81111561124b578283fd5b61125785828601611062565b90969095509350505050565b600060208284031215611274578081fd5b813567ffffffffffffffff81111561128a578182fd5b611296848285016110a9565b949350505050565b600080604083850312156112b0578182fd5b823567ffffffffffffffff8111156112c6578283fd5b6112d2858286016110a9565b92505060208301356112e381611723565b809150509250929050565b6000608082840312156112ff578081fd5b6040516080810181811067ffffffffffffffff821117156113225761132261170d565b80604052508251815260208301516020820152604083015160038110611346578283fd5b6040820152606083015161135981611723565b60608201529392505050565b60006020808385031215611377578182fd5b825167ffffffffffffffff8082111561138e578384fd5b81850191508282870312156113a1578384fd5b6113a9611616565b8251828111156113b7578586fd5b80840193505086601f8401126113cb578485fd5b8251828111156113dd576113dd61170d565b8060051b6113ec86820161163f565b8281528681019086880183880189018c101561140657898afd5b8993505b8484101561144357805187811115611420578a8bfd5b61142e8d8b838c01016110cf565b8452506001939093019291880191880161140a565b508452509198975050505050505050565b600060208284031215611465578081fd5b5051919050565b600080600060408486031215611480578081fd5b83359250602084013567ffffffffffffffff81111561149d578182fd5b6114a986828701611062565b9497909650939450505050565b600081518084526114ce8160208601602086016116b0565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b600082516115048184602087016116b0565b9190910192915050565b60608152600061152160608301866114b6565b828103602084015261153381866114b6565b91505060018060a01b0383166040830152949350505050565b60808152600061155f60808301876114b6565b828103602084015261157181876114b6565b9050828103604084015261158581866114b6565b91505082606083015295945050505050565b6080815260006115aa60808301876114b6565b856020840152828103604084015261158581866114b6565b6060815260006115d560608301866114b6565b60208301949094525060400152919050565b6080815260006115fa60808301876114b6565b6020830195909552506040810192909252606090910152919050565b6040516020810167ffffffffffffffff811182821017156116395761163961170d565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156116685761166861170d565b604052919050565b600067ffffffffffffffff82111561168a5761168a61170d565b50601f01601f191660200190565b600082198211156116ab576116ab6116f7565b500190565b60005b838110156116cb5781810151838201526020016116b3565b83811115610f8c5750506000910152565b60006000198214156116f0576116f06116f7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461173857600080fd5b5056fea2646970667358221220631edf6798a09597ea70d0b21a172fad7fd6925658de8eec2d985df9c96f1c9264736f6c63430008040033";

type WorldTreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldTreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldTreasury__factory extends ContractFactory {
  constructor(...args: WorldTreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _id: BigNumberish,
    _worlds: string,
    _degens: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WorldTreasury> {
    return super.deploy(
      _id,
      _worlds,
      _degens,
      overrides || {}
    ) as Promise<WorldTreasury>;
  }
  override getDeployTransaction(
    _id: BigNumberish,
    _worlds: string,
    _degens: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_id, _worlds, _degens, overrides || {});
  }
  override attach(address: string): WorldTreasury {
    return super.attach(address) as WorldTreasury;
  }
  override connect(signer: Signer): WorldTreasury__factory {
    return super.connect(signer) as WorldTreasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldTreasuryInterface {
    return new utils.Interface(_abi) as WorldTreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorldTreasury {
    return new Contract(address, _abi, signerOrProvider) as WorldTreasury;
  }
}
