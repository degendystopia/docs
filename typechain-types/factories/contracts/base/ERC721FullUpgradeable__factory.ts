/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721FullUpgradeable,
  ERC721FullUpgradeableInterface,
} from "../../../contracts/base/ERC721FullUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "_initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "ownedTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516125ff61004c600039600081816108390152818161087901528181610933015281816109730152610a9901526125ff6000f3fe60806040526004361061014b5760003560e01c806352d1902d116100b6578063a22cb4651161006f578063a22cb46514610390578063b12ab40f146103b0578063b88d4fde146103dd578063c87b56dd146103fd578063e985e9c51461041d578063f2fde38b1461046657600080fd5b806352d1902d146102f35780636352211e1461030857806370a0823114610328578063715018a6146103485780638da5cb5b1461035d57806395d89b411461037b57600080fd5b806323b872dd1161010857806323b872dd146102405780632f745c59146102605780633659cfe61461028057806342842e0e146102a05780634f1ef286146102c05780634f6ccce7146102d357600080fd5b806301ffc9a71461015057806306fdde0314610185578063081812fc146101a7578063095ea7b3146101df578063098dce131461020157806318160ddd14610221575b600080fd5b34801561015c57600080fd5b5061017061016b366004611e1a565b610486565b60405190151581526020015b60405180910390f35b34801561019157600080fd5b5061019a610497565b60405161017c9190611e8f565b3480156101b357600080fd5b506101c76101c2366004611ea2565b610529565b6040516001600160a01b03909116815260200161017c565b3480156101eb57600080fd5b506101ff6101fa366004611ed2565b6105c3565b005b34801561020d57600080fd5b506101ff61021c366004611f9f565b6106d8565b34801561022d57600080fd5b5060cb545b60405190815260200161017c565b34801561024c57600080fd5b506101ff61025b366004612003565b610768565b34801561026c57600080fd5b5061023261027b366004611ed2565b610799565b34801561028c57600080fd5b506101ff61029b36600461203f565b61082f565b3480156102ac57600080fd5b506101ff6102bb366004612003565b61090e565b6101ff6102ce36600461205a565b610929565b3480156102df57600080fd5b506102326102ee366004611ea2565b6109f9565b3480156102ff57600080fd5b50610232610a8c565b34801561031457600080fd5b506101c7610323366004611ea2565b610b3f565b34801561033457600080fd5b5061023261034336600461203f565b610bb6565b34801561035457600080fd5b506101ff610c3d565b34801561036957600080fd5b506033546001600160a01b03166101c7565b34801561038757600080fd5b5061019a610c73565b34801561039c57600080fd5b506101ff6103ab36600461209e565b610c82565b3480156103bc57600080fd5b506103d06103cb36600461203f565b610c8d565b60405161017c91906120da565b3480156103e957600080fd5b506101ff6103f836600461211e565b610d35565b34801561040957600080fd5b5061019a610418366004611ea2565b610d6d565b34801561042957600080fd5b50610170610438366004612186565b6001600160a01b039182166000908152609c6020908152604080832093909416825291909152205460ff1690565b34801561047257600080fd5b506101ff61048136600461203f565b610e55565b600061049182610eed565b92915050565b6060609780546104a6906121b9565b80601f01602080910402602001604051908101604052809291908181526020018280546104d2906121b9565b801561051f5780601f106104f45761010080835404028352916020019161051f565b820191906000526020600020905b81548152906001019060200180831161050257829003601f168201915b5050505050905090565b6000818152609960205260408120546001600160a01b03166105a75760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152609b60205260409020546001600160a01b031690565b60006105ce82610b3f565b9050806001600160a01b0316836001600160a01b03160361063b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161059e565b336001600160a01b038216148061065757506106578133610438565b6106c95760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161059e565b6106d38383610f12565b505050565b60006106e46001610f80565b905080156106fc576000805461ff0019166101001790555b61070461100d565b61070c611034565b6107168383611063565b61071e61100d565b80156106d3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6107723382611094565b61078e5760405162461bcd60e51b815260040161059e906121f3565b6106d383838361118b565b60006107a483610bb6565b82106108065760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161059e565b506001600160a01b0391909116600090815260c960209081526040808320938352929052205490565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036108775760405162461bcd60e51b815260040161059e90612244565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108c0600080516020612583833981519152546001600160a01b031690565b6001600160a01b0316146108e65760405162461bcd60e51b815260040161059e90612290565b6108ef81611332565b6040805160008082526020820190925261090b9183919061135c565b50565b6106d383838360405180602001604052806000815250610d35565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036109715760405162461bcd60e51b815260040161059e90612244565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109ba600080516020612583833981519152546001600160a01b031690565b6001600160a01b0316146109e05760405162461bcd60e51b815260040161059e90612290565b6109e982611332565b6109f58282600161135c565b5050565b6000610a0460cb5490565b8210610a675760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161059e565b60cb8281548110610a7a57610a7a6122dc565b90600052602060002001549050919050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b2c5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161059e565b5060008051602061258383398151915290565b6000818152609960205260408120546001600160a01b0316806104915760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161059e565b60006001600160a01b038216610c215760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161059e565b506001600160a01b03166000908152609a602052604090205490565b6033546001600160a01b03163314610c675760405162461bcd60e51b815260040161059e906122f2565b610c7160006114c7565b565b6060609880546104a6906121b9565b6109f5338383611519565b60606000610c9a83610bb6565b905060008167ffffffffffffffff811115610cb757610cb7611efc565b604051908082528060200260200182016040528015610ce0578160200160208202803683370190505b50905060005b82811015610d2d576000610cfa8683610799565b905080838381518110610d0f57610d0f6122dc565b60209081029190910101525080610d258161233d565b915050610ce6565b509392505050565b610d3f3383611094565b610d5b5760405162461bcd60e51b815260040161059e906121f3565b610d67848484846115e7565b50505050565b6000818152609960205260409020546060906001600160a01b0316610dec5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161059e565b6000610e0360408051602081019091526000815290565b90506000815111610e235760405180602001604052806000815250610e4e565b80610e2d8461161a565b604051602001610e3e929190612356565b6040516020818303038152906040525b9392505050565b6033546001600160a01b03163314610e7f5760405162461bcd60e51b815260040161059e906122f2565b6001600160a01b038116610ee45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161059e565b61090b816114c7565b60006001600160e01b0319821663780e9d6360e01b148061049157506104918261171b565b6000818152609b6020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610f4782610b3f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008054610100900460ff1615610fc7578160ff166001148015610fa35750303b155b610fbf5760405162461bcd60e51b815260040161059e90612385565b506000919050565b60005460ff808416911610610fee5760405162461bcd60e51b815260040161059e90612385565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610c715760405162461bcd60e51b815260040161059e906123d3565b600054610100900460ff1661105b5760405162461bcd60e51b815260040161059e906123d3565b610c7161176b565b600054610100900460ff1661108a5760405162461bcd60e51b815260040161059e906123d3565b6109f5828261179b565b6000818152609960205260408120546001600160a01b031661110d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161059e565b600061111883610b3f565b9050806001600160a01b0316846001600160a01b0316148061115f57506001600160a01b038082166000908152609c602090815260408083209388168352929052205460ff165b806111835750836001600160a01b031661117884610529565b6001600160a01b0316145b949350505050565b826001600160a01b031661119e82610b3f565b6001600160a01b0316146112025760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161059e565b6001600160a01b0382166112645760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161059e565b61126f8383836117e9565b61127a600082610f12565b6001600160a01b0383166000908152609a602052604081208054600192906112a390849061241e565b90915550506001600160a01b0382166000908152609a602052604081208054600192906112d1908490612435565b909155505060008181526099602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6033546001600160a01b0316331461090b5760405162461bcd60e51b815260040161059e906122f2565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561138f576106d3836117f4565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156113e9575060408051601f3d908101601f191682019092526113e69181019061244d565b60015b61144c5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161059e565b60008051602061258383398151915281146114bb5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161059e565b506106d3838383611890565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03160361157a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161059e565b6001600160a01b038381166000818152609c6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6115f284848461118b565b6115fe848484846118b5565b610d675760405162461bcd60e51b815260040161059e90612466565b6060816000036116415750506040805180820190915260018152600360fc1b602082015290565b8160005b811561166b57806116558161233d565b91506116649050600a836124ce565b9150611645565b60008167ffffffffffffffff81111561168657611686611efc565b6040519080825280601f01601f1916602001820160405280156116b0576020820181803683370190505b5090505b8415611183576116c560018361241e565b91506116d2600a866124e2565b6116dd906030612435565b60f81b8183815181106116f2576116f26122dc565b60200101906001600160f81b031916908160001a905350611714600a866124ce565b94506116b4565b60006001600160e01b031982166380ac58cd60e01b148061174c57506001600160e01b03198216635b5e139f60e01b145b8061049157506301ffc9a760e01b6001600160e01b0319831614610491565b600054610100900460ff166117925760405162461bcd60e51b815260040161059e906123d3565b610c71336114c7565b600054610100900460ff166117c25760405162461bcd60e51b815260040161059e906123d3565b81516117d5906097906020850190611d6b565b5080516106d3906098906020840190611d6b565b6106d38383836119b6565b6001600160a01b0381163b6118615760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161059e565b60008051602061258383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61189983611a6e565b6000825111806118a65750805b156106d357610d678383611aae565b60006001600160a01b0384163b156119ab57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118f99033908990889088906004016124f6565b6020604051808303816000875af1925050508015611934575060408051601f3d908101601f1916820190925261193191810190612533565b60015b611991573d808015611962576040519150601f19603f3d011682016040523d82523d6000602084013e611967565b606091505b5080516000036119895760405162461bcd60e51b815260040161059e90612466565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611183565b506001949350505050565b6001600160a01b038316611a1157611a0c8160cb8054600083815260cc60205260408120829055600182018355919091527fa7ce836d032b2bf62b7e2097a8e0a6d8aeb35405ad15271e96d3b0188a1d06fb0155565b611a34565b816001600160a01b0316836001600160a01b031614611a3457611a348382611ba2565b6001600160a01b038216611a4b576106d381611c3f565b826001600160a01b0316826001600160a01b0316146106d3576106d38282611cee565b611a77816117f4565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611b165760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161059e565b600080846001600160a01b031684604051611b319190612550565b600060405180830381855af49150503d8060008114611b6c576040519150601f19603f3d011682016040523d82523d6000602084013e611b71565b606091505b5091509150611b9982826040518060600160405280602781526020016125a360279139611d32565b95945050505050565b60006001611baf84610bb6565b611bb9919061241e565b600083815260ca6020526040902054909150808214611c0c576001600160a01b038416600090815260c960209081526040808320858452825280832054848452818420819055835260ca90915290208190555b50600091825260ca602090815260408084208490556001600160a01b03909416835260c981528383209183525290812055565b60cb54600090611c519060019061241e565b600083815260cc602052604081205460cb8054939450909284908110611c7957611c796122dc565b906000526020600020015490508060cb8381548110611c9a57611c9a6122dc565b600091825260208083209091019290925582815260cc909152604080822084905585825281205560cb805480611cd257611cd261256c565b6001900381819060005260206000200160009055905550505050565b6000611cf983610bb6565b6001600160a01b03909316600090815260c960209081526040808320868452825280832085905593825260ca9052919091209190915550565b60608315611d41575081610e4e565b825115611d515782518084602001fd5b8160405162461bcd60e51b815260040161059e9190611e8f565b828054611d77906121b9565b90600052602060002090601f016020900481019282611d995760008555611ddf565b82601f10611db257805160ff1916838001178555611ddf565b82800160010185558215611ddf579182015b82811115611ddf578251825591602001919060010190611dc4565b50611deb929150611def565b5090565b5b80821115611deb5760008155600101611df0565b6001600160e01b03198116811461090b57600080fd5b600060208284031215611e2c57600080fd5b8135610e4e81611e04565b60005b83811015611e52578181015183820152602001611e3a565b83811115610d675750506000910152565b60008151808452611e7b816020860160208601611e37565b601f01601f19169290920160200192915050565b602081526000610e4e6020830184611e63565b600060208284031215611eb457600080fd5b5035919050565b80356001600160a01b038116811461100857600080fd5b60008060408385031215611ee557600080fd5b611eee83611ebb565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611f2357600080fd5b813567ffffffffffffffff80821115611f3e57611f3e611efc565b604051601f8301601f19908116603f01168101908282118183101715611f6657611f66611efc565b81604052838152866020858801011115611f7f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611fb257600080fd5b823567ffffffffffffffff80821115611fca57600080fd5b611fd686838701611f12565b93506020850135915080821115611fec57600080fd5b50611ff985828601611f12565b9150509250929050565b60008060006060848603121561201857600080fd5b61202184611ebb565b925061202f60208501611ebb565b9150604084013590509250925092565b60006020828403121561205157600080fd5b610e4e82611ebb565b6000806040838503121561206d57600080fd5b61207683611ebb565b9150602083013567ffffffffffffffff81111561209257600080fd5b611ff985828601611f12565b600080604083850312156120b157600080fd5b6120ba83611ebb565b9150602083013580151581146120cf57600080fd5b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015612112578351835292840192918401916001016120f6565b50909695505050505050565b6000806000806080858703121561213457600080fd5b61213d85611ebb565b935061214b60208601611ebb565b925060408501359150606085013567ffffffffffffffff81111561216e57600080fd5b61217a87828801611f12565b91505092959194509250565b6000806040838503121561219957600080fd5b6121a283611ebb565b91506121b060208401611ebb565b90509250929050565b600181811c908216806121cd57607f821691505b6020821081036121ed57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001820161234f5761234f612327565b5060010190565b60008351612368818460208801611e37565b83519083019061237c818360208801611e37565b01949350505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008282101561243057612430612327565b500390565b6000821982111561244857612448612327565b500190565b60006020828403121561245f57600080fd5b5051919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826124dd576124dd6124b8565b500490565b6000826124f1576124f16124b8565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061252990830184611e63565b9695505050505050565b60006020828403121561254557600080fd5b8151610e4e81611e04565b60008251612562818460208701611e37565b9190910192915050565b634e487b7160e01b600052603160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ac11606bfa2d3668b8fd71dc0ff4eafb6715e7c322d7ac04d457088f9ad9e4fa64736f6c634300080d0033";

type ERC721FullUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721FullUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721FullUpgradeable__factory extends ContractFactory {
  constructor(...args: ERC721FullUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721FullUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC721FullUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721FullUpgradeable {
    return super.attach(address) as ERC721FullUpgradeable;
  }
  override connect(signer: Signer): ERC721FullUpgradeable__factory {
    return super.connect(signer) as ERC721FullUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721FullUpgradeableInterface {
    return new utils.Interface(_abi) as ERC721FullUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721FullUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721FullUpgradeable;
  }
}
