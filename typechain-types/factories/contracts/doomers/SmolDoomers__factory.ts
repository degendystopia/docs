/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SmolDoomers,
  SmolDoomersInterface,
} from "../../../contracts/doomers/SmolDoomers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "customBaseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600c81526b536d6f6c20446f6f6d65727360a01b602080830191825283518085019094526008845267534d4f4c444f4f4d60c01b908401528151919291620000669160009162000141565b5080516200007c90600190602084019062000141565b5050506200009962000093620000eb60201b60201c565b620000ef565b60405180608001604052806044815260200162001c5d604491398051620000c991600b9160209091019062000141565b50600060095561041a600a556003600e556005600d5561012c600c5562000223565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200014f90620001e7565b90600052602060002090601f016020900481019282620001735760008555620001be565b82601f106200018e57805160ff1916838001178555620001be565b82800160010185558215620001be579182015b82811115620001be578251825591602001919060010190620001a1565b50620001cc929150620001d0565b5090565b5b80821115620001cc5760008155600101620001d1565b600181811c90821680620001fc57607f821691505b6020821081036200021d57634e487b7160e01b600052602260045260246000fd5b50919050565b611a2a80620002336000396000f3fe60806040526004361061011f5760003560e01c806370a08231116100a0578063a22cb46511610064578063a22cb46514610332578063b88d4fde14610352578063c87b56dd14610372578063e985e9c514610392578063f2fde38b146103db57600080fd5b806370a08231146102b7578063715018a6146102d75780638da5cb5b146102ec57806395d89b411461030a578063a0712d681461031f57600080fd5b806323b872dd116100e757806323b872dd146101f85780632a55205a1461021857806342842e0e1461025757806355f804b3146102775780636352211e1461029757600080fd5b806301ffc9a71461012457806306fdde0314610159578063081812fc1461017b578063095ea7b3146101b357806318160ddd146101d5575b600080fd5b34801561013057600080fd5b5061014461013f3660046114a0565b6103fb565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b5061016e61042c565b6040516101509190611515565b34801561018757600080fd5b5061019b610196366004611528565b6104be565b6040516001600160a01b039091168152602001610150565b3480156101bf57600080fd5b506101d36101ce36600461155d565b6104e5565b005b3480156101e157600080fd5b506101ea6105ff565b604051908152602001610150565b34801561020457600080fd5b506101d3610213366004611587565b61060f565b34801561022457600080fd5b506102386102333660046115c3565b610640565b604080516001600160a01b039093168352602083019190915201610150565b34801561026357600080fd5b506101d3610272366004611587565b61067b565b34801561028357600080fd5b506101d3610292366004611671565b610696565b3480156102a357600080fd5b5061019b6102b2366004611528565b6106b5565b3480156102c357600080fd5b506101ea6102d23660046116ba565b610715565b3480156102e357600080fd5b506101d361079b565b3480156102f857600080fd5b506007546001600160a01b031661019b565b34801561031657600080fd5b5061016e6107af565b6101d361032d366004611528565b6107be565b34801561033e57600080fd5b506101d361034d3660046116d5565b6108c5565b34801561035e57600080fd5b506101d361036d366004611711565b6108d0565b34801561037e57600080fd5b5061016e61038d366004611528565b610908565b34801561039e57600080fd5b506101446103ad36600461178d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156103e757600080fd5b506101d36103f63660046116ba565b610a0b565b6000636ad56fd360e11b6001600160e01b031983160161041d57506001919050565b61042682610a84565b92915050565b60606000805461043b906117c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610467906117c0565b80156104b45780601f10610489576101008083540402835291602001916104b4565b820191906000526020600020905b81548152906001019060200180831161049757829003601f168201915b5050505050905090565b60006104c982610ad4565b506000908152600460205260409020546001600160a01b031690565b60006104f0826106b5565b9050806001600160a01b0316836001600160a01b0316036105625760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061057e575061057e81336103ad565b6105f05760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610559565b6105fa8383610b33565b505050565b600061060a60085490565b905090565b6106193382610ba1565b6106355760405162461bcd60e51b8152600401610559906117fa565b6105fa838383610c1f565b6000806106556007546001600160a01b031690565b612710600c5485610666919061185e565b6106709190611893565b915091509250929050565b6105fa838383604051806020016040528060008152506108d0565b61069e610dbb565b80516106b190600b9060208401906113f1565b5050565b6000818152600260205260408120546001600160a01b0316806104265760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610559565b60006001600160a01b03821661077f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610559565b506001600160a01b031660009081526003602052604090205490565b6107a3610dbb565b6107ad6000610e15565b565b60606001805461043b906117c0565b600e548111156108105760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206d696e742074686174206d616e79206174206f6e63652e00006044820152606401610559565b8060095461081e919061185e565b3410156108655760405162461bcd60e51b81526020600482015260156024820152742737ba1032b737bab3b41020ab20ac1039b2b73a1760591b6044820152606401610559565b6007546040516001600160a01b03909116903480156108fc02916000818181858888f1935050505015801561089e573d6000803e3d6000fd5b5060005b818110156106b1576108b333610e67565b806108bd816118a7565b9150506108a2565b6106b1338383610f36565b6108da3383610ba1565b6108f65760405162461bcd60e51b8152600401610559906117fa565b61090284848484611004565b50505050565b606061091382610ad4565b6000828152600660205260408120805461092c906117c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610958906117c0565b80156109a55780601f1061097a576101008083540402835291602001916109a5565b820191906000526020600020905b81548152906001019060200180831161098857829003601f168201915b5050505050905060006109b6611037565b905080516000036109c8575092915050565b8151156109fa5780826040516020016109e29291906118c0565b60405160208183030381529060405292505050919050565b610a0384611046565b949350505050565b610a13610dbb565b6001600160a01b038116610a785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610559565b610a8181610e15565b50565b60006001600160e01b031982166380ac58cd60e01b1480610ab557506001600160e01b03198216635b5e139f60e01b145b8061042657506301ffc9a760e01b6001600160e01b0319831614610426565b6000818152600260205260409020546001600160a01b0316610a815760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610559565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b68826106b5565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610bad836106b5565b9050806001600160a01b0316846001600160a01b03161480610bf457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a035750836001600160a01b0316610c0d846104be565b6001600160a01b031614949350505050565b826001600160a01b0316610c32826106b5565b6001600160a01b031614610c965760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610559565b6001600160a01b038216610cf85760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610559565b610d03600082610b33565b6001600160a01b0383166000908152600360205260408120805460019290610d2c9084906118ef565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d5a908490611906565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546001600160a01b031633146107ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610559565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610e75600880546001019055565b600a546008541115610ec95760405162461bcd60e51b815260206004820152601c60248201527f50726f6a6563742069732066696e6973686564206d696e74696e672e000000006044820152606401610559565b6000610ed460085490565b9050610ee082826110ad565b6007546001600160a01b03838116911614801590610f085750600d54610f06908261191e565b155b8015610f175750600a54600854105b156106b1576106b1610f316007546001600160a01b031690565b610e67565b816001600160a01b0316836001600160a01b031603610f975760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610559565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61100f848484610c1f565b61101b848484846111ef565b6109025760405162461bcd60e51b815260040161055990611932565b6060600b805461043b906117c0565b606061105182610ad4565b600061105b611037565b9050600081511161107b57604051806020016040528060008152506110a6565b80611085846112f0565b6040516020016110969291906118c0565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166111035760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610559565b6000818152600260205260409020546001600160a01b0316156111685760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610559565b6001600160a01b0382166000908152600360205260408120805460019290611191908490611906565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156112e557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611233903390899088908890600401611984565b6020604051808303816000875af192505050801561126e575060408051601f3d908101601f1916820190925261126b918101906119c1565b60015b6112cb573d80801561129c576040519150601f19603f3d011682016040523d82523d6000602084013e6112a1565b606091505b5080516000036112c35760405162461bcd60e51b815260040161055990611932565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a03565b506001949350505050565b6060816000036113175750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611341578061132b816118a7565b915061133a9050600a83611893565b915061131b565b60008167ffffffffffffffff81111561135c5761135c6115e5565b6040519080825280601f01601f191660200182016040528015611386576020820181803683370190505b5090505b8415610a035761139b6001836118ef565b91506113a8600a8661191e565b6113b3906030611906565b60f81b8183815181106113c8576113c86119de565b60200101906001600160f81b031916908160001a9053506113ea600a86611893565b945061138a565b8280546113fd906117c0565b90600052602060002090601f01602090048101928261141f5760008555611465565b82601f1061143857805160ff1916838001178555611465565b82800160010185558215611465579182015b8281111561146557825182559160200191906001019061144a565b50611471929150611475565b5090565b5b808211156114715760008155600101611476565b6001600160e01b031981168114610a8157600080fd5b6000602082840312156114b257600080fd5b81356110a68161148a565b60005b838110156114d85781810151838201526020016114c0565b838111156109025750506000910152565b600081518084526115018160208601602086016114bd565b601f01601f19169290920160200192915050565b6020815260006110a660208301846114e9565b60006020828403121561153a57600080fd5b5035919050565b80356001600160a01b038116811461155857600080fd5b919050565b6000806040838503121561157057600080fd5b61157983611541565b946020939093013593505050565b60008060006060848603121561159c57600080fd5b6115a584611541565b92506115b360208501611541565b9150604084013590509250925092565b600080604083850312156115d657600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611616576116166115e5565b604051601f8501601f19908116603f0116810190828211818310171561163e5761163e6115e5565b8160405280935085815286868601111561165757600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561168357600080fd5b813567ffffffffffffffff81111561169a57600080fd5b8201601f810184136116ab57600080fd5b610a03848235602084016115fb565b6000602082840312156116cc57600080fd5b6110a682611541565b600080604083850312156116e857600080fd5b6116f183611541565b91506020830135801515811461170657600080fd5b809150509250929050565b6000806000806080858703121561172757600080fd5b61173085611541565b935061173e60208601611541565b925060408501359150606085013567ffffffffffffffff81111561176157600080fd5b8501601f8101871361177257600080fd5b611781878235602084016115fb565b91505092959194509250565b600080604083850312156117a057600080fd5b6117a983611541565b91506117b760208401611541565b90509250929050565b600181811c908216806117d457607f821691505b6020821081036117f457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561187857611878611848565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826118a2576118a261187d565b500490565b6000600182016118b9576118b9611848565b5060010190565b600083516118d28184602088016114bd565b8351908301906118e68183602088016114bd565b01949350505050565b60008282101561190157611901611848565b500390565b6000821982111561191957611919611848565b500190565b60008261192d5761192d61187d565b500690565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119b7908301846114e9565b9695505050505050565b6000602082840312156119d357600080fd5b81516110a68161148a565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220d41cf666b3a261276efab83b83bf682ff87060f76b0006865e769097b48eb8e164736f6c634300080d003368747470733a2f2f697066732e696f2f697066732f516d554169634a70773344786e314653486f4e4b737a7a36546a5350627a626247777162423359596e35423834372f";

type SmolDoomersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmolDoomersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmolDoomers__factory extends ContractFactory {
  constructor(...args: SmolDoomersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SmolDoomers> {
    return super.deploy(overrides || {}) as Promise<SmolDoomers>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SmolDoomers {
    return super.attach(address) as SmolDoomers;
  }
  override connect(signer: Signer): SmolDoomers__factory {
    return super.connect(signer) as SmolDoomers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmolDoomersInterface {
    return new utils.Interface(_abi) as SmolDoomersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmolDoomers {
    return new Contract(address, _abi, signerOrProvider) as SmolDoomers;
  }
}
