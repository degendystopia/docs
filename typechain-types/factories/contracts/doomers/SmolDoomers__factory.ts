/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SmolDoomers,
  SmolDoomersInterface,
} from "../../../contracts/doomers/SmolDoomers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "customBaseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600c81526b536d6f6c20446f6f6d65727360a01b602080830191825283518085019094526008845267534d4f4c444f4f4d60c01b908401528151919291620000669160009162000141565b5080516200007c90600190602084019062000141565b5050506200009962000093620000eb60201b60201c565b620000ef565b60405180608001604052806044815260200162001c64604491398051620000c991600b9160209091019062000141565b50600060095561041a600a556003600e556005600d5561012c600c5562000224565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200014f90620001e7565b90600052602060002090601f016020900481019282620001735760008555620001be565b82601f106200018e57805160ff1916838001178555620001be565b82800160010185558215620001be579182015b82811115620001be578251825591602001919060010190620001a1565b50620001cc929150620001d0565b5090565b5b80821115620001cc5760008155600101620001d1565b600181811c90821680620001fc57607f821691505b602082108114156200021e57634e487b7160e01b600052602260045260246000fd5b50919050565b611a3080620002346000396000f3fe60806040526004361061011f5760003560e01c806370a08231116100a0578063a22cb46511610064578063a22cb46514610332578063b88d4fde14610352578063c87b56dd14610372578063e985e9c514610392578063f2fde38b146103db57600080fd5b806370a08231146102b7578063715018a6146102d75780638da5cb5b146102ec57806395d89b411461030a578063a0712d681461031f57600080fd5b806323b872dd116100e757806323b872dd146101f85780632a55205a1461021857806342842e0e1461025757806355f804b3146102775780636352211e1461029757600080fd5b806301ffc9a71461012457806306fdde0314610159578063081812fc1461017b578063095ea7b3146101b357806318160ddd146101d5575b600080fd5b34801561013057600080fd5b5061014461013f3660046116a8565b6103fb565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b5061016e61042d565b60405161015091906117f7565b34801561018757600080fd5b5061019b610196366004611726565b6104bf565b6040516001600160a01b039091168152602001610150565b3480156101bf57600080fd5b506101d36101ce36600461167f565b6104e6565b005b3480156101e157600080fd5b506101ea610601565b604051908152602001610150565b34801561020457600080fd5b506101d3610213366004611591565b610611565b34801561022457600080fd5b5061023861023336600461173e565b610642565b604080516001600160a01b039093168352602083019190915201610150565b34801561026357600080fd5b506101d3610272366004611591565b61067d565b34801561028357600080fd5b506101d36102923660046116e0565b610698565b3480156102a357600080fd5b5061019b6102b2366004611726565b6106b7565b3480156102c357600080fd5b506101ea6102d2366004611545565b610717565b3480156102e357600080fd5b506101d361079d565b3480156102f857600080fd5b506007546001600160a01b031661019b565b34801561031657600080fd5b5061016e6107b1565b6101d361032d366004611726565b6107c0565b34801561033e57600080fd5b506101d361034d366004611645565b6108c7565b34801561035e57600080fd5b506101d361036d3660046115cc565b6108d2565b34801561037e57600080fd5b5061016e61038d366004611726565b61090a565b34801561039e57600080fd5b506101446103ad36600461155f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156103e757600080fd5b506101d36103f6366004611545565b610a0e565b60006001600160e01b0319821663152a902d60e11b141561041e57506001919050565b61042782610a87565b92915050565b60606000805461043c90611938565b80601f016020809104026020016040519081016040528092919081815260200182805461046890611938565b80156104b55780601f1061048a576101008083540402835291602001916104b5565b820191906000526020600020905b81548152906001019060200180831161049857829003601f168201915b5050505050905090565b60006104ca82610ad7565b506000908152600460205260409020546001600160a01b031690565b60006104f1826106b7565b9050806001600160a01b0316836001600160a01b031614156105645760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610580575061058081336103ad565b6105f25760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161055b565b6105fc8383610b36565b505050565b600061060c60085490565b905090565b61061b3382610ba4565b6106375760405162461bcd60e51b815260040161055b9061185c565b6105fc838383610c22565b6000806106576007546001600160a01b031690565b612710600c548561066891906118d6565b61067291906118c2565b915091509250929050565b6105fc838383604051806020016040528060008152506108d2565b6106a0610dbe565b80516106b390600b90602084019061141a565b5050565b6000818152600260205260408120546001600160a01b0316806104275760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161055b565b60006001600160a01b0382166107815760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161055b565b506001600160a01b031660009081526003602052604090205490565b6107a5610dbe565b6107af6000610e18565b565b60606001805461043c90611938565b600e548111156108125760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206d696e742074686174206d616e79206174206f6e63652e0000604482015260640161055b565b8060095461082091906118d6565b3410156108675760405162461bcd60e51b81526020600482015260156024820152742737ba1032b737bab3b41020ab20ac1039b2b73a1760591b604482015260640161055b565b6007546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156108a0573d6000803e3d6000fd5b5060005b818110156106b3576108b533610e6a565b806108bf81611973565b9150506108a4565b6106b3338383610f39565b6108dc3383610ba4565b6108f85760405162461bcd60e51b815260040161055b9061185c565b61090484848484611008565b50505050565b606061091582610ad7565b6000828152600660205260408120805461092e90611938565b80601f016020809104026020016040519081016040528092919081815260200182805461095a90611938565b80156109a75780601f1061097c576101008083540402835291602001916109a7565b820191906000526020600020905b81548152906001019060200180831161098a57829003601f168201915b5050505050905060006109b861103b565b90508051600014156109cb575092915050565b8151156109fd5780826040516020016109e592919061178b565b60405160208183030381529060405292505050919050565b610a068461104a565b949350505050565b610a16610dbe565b6001600160a01b038116610a7b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161055b565b610a8481610e18565b50565b60006001600160e01b031982166380ac58cd60e01b1480610ab857506001600160e01b03198216635b5e139f60e01b145b8061042757506301ffc9a760e01b6001600160e01b0319831614610427565b6000818152600260205260409020546001600160a01b0316610a845760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161055b565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b6b826106b7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610bb0836106b7565b9050806001600160a01b0316846001600160a01b03161480610bf757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a065750836001600160a01b0316610c10846104bf565b6001600160a01b031614949350505050565b826001600160a01b0316610c35826106b7565b6001600160a01b031614610c995760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161055b565b6001600160a01b038216610cfb5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161055b565b610d06600082610b36565b6001600160a01b0383166000908152600360205260408120805460019290610d2f9084906118f5565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d5d9084906118aa565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546001600160a01b031633146107af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161055b565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610e78600880546001019055565b600a546008541115610ecc5760405162461bcd60e51b815260206004820152601c60248201527f50726f6a6563742069732066696e6973686564206d696e74696e672e00000000604482015260640161055b565b6000610ed760085490565b9050610ee382826110b1565b6007546001600160a01b03838116911614801590610f0b5750600d54610f09908261198e565b155b8015610f1a5750600a54600854105b156106b3576106b3610f346007546001600160a01b031690565b610e6a565b816001600160a01b0316836001600160a01b03161415610f9b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161055b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611013848484610c22565b61101f848484846111f3565b6109045760405162461bcd60e51b815260040161055b9061180a565b6060600b805461043c90611938565b606061105582610ad7565b600061105f61103b565b9050600081511161107f57604051806020016040528060008152506110aa565b8061108984611300565b60405160200161109a92919061178b565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166111075760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161055b565b6000818152600260205260409020546001600160a01b03161561116c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161055b565b6001600160a01b03821660009081526003602052604081208054600192906111959084906118aa565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156112f557604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112379033908990889088906004016117ba565b602060405180830381600087803b15801561125157600080fd5b505af1925050508015611281575060408051601f3d908101601f1916820190925261127e918101906116c4565b60015b6112db573d8080156112af576040519150601f19603f3d011682016040523d82523d6000602084013e6112b4565b606091505b5080516112d35760405162461bcd60e51b815260040161055b9061180a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a06565b506001949350505050565b6060816113245750506040805180820190915260018152600360fc1b602082015290565b8160005b811561134e578061133881611973565b91506113479050600a836118c2565b9150611328565b60008167ffffffffffffffff81111561137757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113a1576020820181803683370190505b5090505b8415610a06576113b66001836118f5565b91506113c3600a8661198e565b6113ce9060306118aa565b60f81b8183815181106113f157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611413600a866118c2565b94506113a5565b82805461142690611938565b90600052602060002090601f016020900481019282611448576000855561148e565b82601f1061146157805160ff191683800117855561148e565b8280016001018555821561148e579182015b8281111561148e578251825591602001919060010190611473565b5061149a92915061149e565b5090565b5b8082111561149a576000815560010161149f565b600067ffffffffffffffff808411156114ce576114ce6119ce565b604051601f8501601f19908116603f011681019082821181831017156114f6576114f66119ce565b8160405280935085815286868601111561150f57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461154057600080fd5b919050565b600060208284031215611556578081fd5b6110aa82611529565b60008060408385031215611571578081fd5b61157a83611529565b915061158860208401611529565b90509250929050565b6000806000606084860312156115a5578081fd5b6115ae84611529565b92506115bc60208501611529565b9150604084013590509250925092565b600080600080608085870312156115e1578081fd5b6115ea85611529565b93506115f860208601611529565b925060408501359150606085013567ffffffffffffffff81111561161a578182fd5b8501601f8101871361162a578182fd5b611639878235602084016114b3565b91505092959194509250565b60008060408385031215611657578182fd5b61166083611529565b915060208301358015158114611674578182fd5b809150509250929050565b60008060408385031215611691578182fd5b61169a83611529565b946020939093013593505050565b6000602082840312156116b9578081fd5b81356110aa816119e4565b6000602082840312156116d5578081fd5b81516110aa816119e4565b6000602082840312156116f1578081fd5b813567ffffffffffffffff811115611707578182fd5b8201601f81018413611717578182fd5b610a06848235602084016114b3565b600060208284031215611737578081fd5b5035919050565b60008060408385031215611750578182fd5b50508035926020909101359150565b6000815180845261177781602086016020860161190c565b601f01601f19169290920160200192915050565b6000835161179d81846020880161190c565b8351908301906117b181836020880161190c565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117ed9083018461175f565b9695505050505050565b6020815260006110aa602083018461175f565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b600082198211156118bd576118bd6119a2565b500190565b6000826118d1576118d16119b8565b500490565b60008160001904831182151516156118f0576118f06119a2565b500290565b600082821015611907576119076119a2565b500390565b60005b8381101561192757818101518382015260200161190f565b838111156109045750506000910152565b600181811c9082168061194c57607f821691505b6020821081141561196d57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611987576119876119a2565b5060010190565b60008261199d5761199d6119b8565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610a8457600080fdfea26469706673582212200a0c18e2bd8138b44fef5b9669bb5e1516d955d513a8748768adf075b03b0a1a64736f6c6343000804003368747470733a2f2f697066732e696f2f697066732f516d554169634a70773344786e314653486f4e4b737a7a36546a5350627a626247777162423359596e35423834372f";

type SmolDoomersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmolDoomersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmolDoomers__factory extends ContractFactory {
  constructor(...args: SmolDoomersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SmolDoomers> {
    return super.deploy(overrides || {}) as Promise<SmolDoomers>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SmolDoomers {
    return super.attach(address) as SmolDoomers;
  }
  override connect(signer: Signer): SmolDoomers__factory {
    return super.connect(signer) as SmolDoomers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmolDoomersInterface {
    return new utils.Interface(_abi) as SmolDoomersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmolDoomers {
    return new Contract(address, _abi, signerOrProvider) as SmolDoomers;
  }
}
