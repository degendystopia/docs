/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SmolrDoomers,
  SmolrDoomersInterface,
} from "../../../contracts/doomers/SmolrDoomers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimApeDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "claimSmolDrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getEligibleApes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getEligibleSmolDoomers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "customBaseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "started",
        type: "bool",
      },
    ],
    name: "setStarted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600d81526c536d6f6c7220446f6f6d65727360981b602080830191825283518085019094526009845268534d4f4c52444f4f4d60b81b90840152815191929162000068916000916200019a565b5080516200007e9060019060208401906200019a565b5050506200009b620000956200014460201b60201c565b62000148565b60405180608001604052806044815260200162002c77604491398051620000cb916012916020909101906200019a565b50670de0b6b3a764000060105561105460115561012c6013556101f4601481905560155562015180600f55601680546001600160a01b031990811673f2b7638db11427821b03def718d58a0b4c93404c1790915560178054909116736d5087b3082f73d42a32d85e38bc95dccede39bb1790556200027c565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001a89062000240565b90600052602060002090601f016020900481019282620001cc576000855562000217565b82601f10620001e757805160ff191683800117855562000217565b8280016001018555821562000217579182015b8281111562000217578251825591602001919060010190620001fa565b506200022592915062000229565b5090565b5b808211156200022557600081556001016200022a565b600181811c908216806200025557607f821691505b6020821081036200027657634e487b7160e01b600052602260045260246000fd5b50919050565b6129eb806200028c6000396000f3fe6080604052600436106101b75760003560e01c8063715018a6116100ec578063a22cb4651161008a578063e4da579611610064578063e4da5796146104e8578063e985e9c514610508578063ef6b141a14610551578063f2fde38b1461057157600080fd5b8063a22cb46514610488578063b88d4fde146104a8578063c87b56dd146104c857600080fd5b80638da5cb5b116100c65780638da5cb5b1461042257806391b7f5ed1461044057806395d89b4114610460578063a0712d681461047557600080fd5b8063715018a6146103d857806378e58eb0146103ed57806389e8af071461040d57600080fd5b80632f745c591161015957806355f804b31161013357806355f804b31461034b5780636352211e1461036b578063703d94d91461038b57806370a08231146103b857600080fd5b80632f745c59146102eb57806342842e0e1461030b5780634f6ccce71461032b57600080fd5b8063095ea7b311610195578063095ea7b31461024b57806318160ddd1461026d57806323b872dd1461028c5780632a55205a146102ac57600080fd5b806301ffc9a7146101bc57806306fdde03146101f1578063081812fc14610213575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004612310565b610591565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b506102066105c2565b6040516101e89190612385565b34801561021f57600080fd5b5061023361022e366004612398565b610654565b6040516001600160a01b0390911681526020016101e8565b34801561025757600080fd5b5061026b6102663660046123c6565b61067b565b005b34801561027957600080fd5b506008545b6040519081526020016101e8565b34801561029857600080fd5b5061026b6102a73660046123f2565b610795565b3480156102b857600080fd5b506102cc6102c7366004612433565b6107c6565b604080516001600160a01b0390931683526020830191909152016101e8565b3480156102f757600080fd5b5061027e6103063660046123c6565b610801565b34801561031757600080fd5b5061026b6103263660046123f2565b610897565b34801561033757600080fd5b5061027e610346366004612398565b6108b2565b34801561035757600080fd5b5061026b6103663660046124e1565b610945565b34801561037757600080fd5b50610233610386366004612398565b610964565b34801561039757600080fd5b506103ab6103a636600461252a565b6109c4565b6040516101e89190612547565b3480156103c457600080fd5b5061027e6103d336600461252a565b610be2565b3480156103e457600080fd5b5061026b610c68565b3480156103f957600080fd5b506103ab61040836600461252a565b610c7c565b34801561041957600080fd5b5061026b610e14565b34801561042e57600080fd5b50600b546001600160a01b0316610233565b34801561044c57600080fd5b5061026b61045b366004612398565b610fba565b34801561046c57600080fd5b50610206610fc7565b61026b610483366004612398565b610fd6565b34801561049457600080fd5b5061026b6104a33660046125a0565b6112f9565b3480156104b457600080fd5b5061026b6104c33660046125d5565b611304565b3480156104d457600080fd5b506102066104e3366004612398565b61133c565b3480156104f457600080fd5b5061026b610503366004612655565b611347565b34801561051457600080fd5b506101dc6105233660046126ca565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561055d57600080fd5b5061026b61056c366004612703565b611527565b34801561057d57600080fd5b5061026b61058c36600461252a565b611546565b6000636ad56fd360e11b6001600160e01b03198316016105b357506001919050565b6105bc826115bf565b92915050565b6060600080546105d19061271e565b80601f01602080910402602001604051908101604052809291908181526020018280546105fd9061271e565b801561064a5780601f1061061f5761010080835404028352916020019161064a565b820191906000526020600020905b81548152906001019060200180831161062d57829003601f168201915b5050505050905090565b600061065f826115e4565b506000908152600460205260409020546001600160a01b031690565b600061068682610964565b9050806001600160a01b0316836001600160a01b0316036106f85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061071457506107148133610523565b6107865760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016106ef565b6107908383611643565b505050565b61079f33826116b1565b6107bb5760405162461bcd60e51b81526004016106ef90612758565b610790838383611730565b6000806107db600b546001600160a01b031690565b612710601354856107ec91906127bc565b6107f691906127f1565b915091509250929050565b600061080c83610be2565b821061086e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016106ef565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61079083838360405180602001604052806000815250611304565b60006108bd60085490565b82106109205760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016106ef565b6008828154811061093357610933612805565b90600052602060002001549050919050565b61094d6118d7565b8051610960906012906020840190612261565b5050565b6000818152600260205260408120546001600160a01b0316806105bc5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016106ef565b6016546040516370a0823160e01b81526001600160a01b038381166004830152606092169060009082906370a0823190602401602060405180830381865afa158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a38919061281b565b905060008167ffffffffffffffff811115610a5557610a55612455565b604051908082528060200260200182016040528015610a7e578160200160208202803683370190505b50905081600003610a9157949350505050565b600060015b846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af8919061281b565b811015610bd75760008181526018602052604090205460ff16610bc5576040516331a9108f60e11b8152600481018290526001600160a01b038089169190871690636352211e90602401602060405180830381865afa158015610b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b839190612834565b6001600160a01b031603610bc55780838381518110610ba457610ba4612805565b602090810291909101015281610bb981612851565b92505083821015610bd7575b80610bcf81612851565b915050610a96565b509095945050505050565b60006001600160a01b038216610c4c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016106ef565b506001600160a01b031660009081526003602052604090205490565b610c706118d7565b610c7a6000611931565b565b6060601554600003610c9c57505060408051600081526020810190915290565b6017546040516370a0823160e01b81526001600160a01b0384811660048301529091169060009082906370a0823190602401602060405180830381865afa158015610ceb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0f919061281b565b905060008167ffffffffffffffff811115610d2c57610d2c612455565b604051908082528060200260200182016040528015610d55578160200160208202803683370190505b50905060005b82811015610e0b57604051632f745c5960e01b81526001600160a01b0387811660048301526024820183905260009190861690632f745c5990604401602060405180830381865afa158015610db4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd8919061281b565b905080838381518110610ded57610ded612805565b60209081029190910101525080610e0381612851565b915050610d5b565b50949350505050565b6000610e1f33610c7c565b905060005b8151811015610960576000828281518110610e4157610e41612805565b60209081029190910101516017546040516331a9108f60e11b8152600481018390529192506001600160a01b03169033908290636352211e90602401602060405180830381865afa158015610e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebe9190612834565b6001600160a01b031614610f145760405162461bcd60e51b815260206004820152601760248201527f596f7520646f206e6f74206f776e20746869732041706500000000000000000060448201526064016106ef565b60008281526019602052604090205460ff1615610f835760405162461bcd60e51b815260206004820152602760248201527f54686174204170652068617320616c7265616479206265656e207573656420746044820152666f20636c61696d60c81b60648201526084016106ef565b6000828152601960205260409020805460ff19166001179055610fa533611983565b50508080610fb290612851565b915050610e24565b610fc26118d7565b601055565b6060600180546105d19061271e565b600d5460ff166110285760405162461bcd60e51b815260206004820152601c60248201527f4d696e74696e6720686173206e6f742073746172746564207965742e0000000060448201526064016106ef565b6000600e5442611038919061286a565b9050600f5481106110c75760405162461bcd60e51b815260206004820152604d60248201527f4d696e74696e67206973206e6f77206f7665722120466f6c6c6f77206874747060448201527f733a2f2f747769747465722e636f6d2f736d6f6c646f6f6d65727320666f722060648201526c333aba3ab93290323937b8399760991b608482015260a4016106ef565b60006110d233610c7c565b90506000805b82518110156111a557600060155411801561112457506019600084838151811061110457611104612805565b60209081029190910181015182528101919091526040016000205460ff16155b15611193578161113381612851565b60158054919450909150600061114883612881565b919050555060016019600085848151811061116557611165612805565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055505b8061119d81612851565b9150506110d8565b5060006014541180156111c85750336000908152601a602052604090205460ff16155b1561120c57806111d781612851565b6014805491935090915060006111ec83612881565b9091555050336000908152601a60205260409020805460ff191660011790555b6000818086111561123457611221838761286a565b60105461122e91906127bc565b91508590505b813410156112905760405162461bcd60e51b8152602060048201526024808201527f4e6f7420656e6f756768204156415820666f7220616c6c207468657365206d69604482015263373a399760e11b60648201526084016106ef565b600b546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156112c9573d6000803e3d6000fd5b5060005b868110156112f0576112de33611983565b806112e881612851565b9150506112cd565b50505050505050565b6109603383836119fc565b61130e33836116b1565b61132a5760405162461bcd60e51b81526004016106ef90612758565b61133684848484611aca565b50505050565b60606105bc82611afd565b8061138c5760405162461bcd60e51b8152602060048201526015602482015274139bc81d1bdad95b881a591cc81c1c9bdd9a591959605a1b60448201526064016106ef565b60005b818110156107905760008383838181106113ab576113ab612805565b6016546040516331a9108f60e11b815260209290920293909301356004820181905293506001600160a01b03909216913391508290636352211e90602401602060405180830381865afa158015611406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142a9190612834565b6001600160a01b0316146114805760405162461bcd60e51b815260206004820152601860248201527f596f7520646f206e6f74206f776e207468697320536d6f6c000000000000000060448201526064016106ef565b60008281526018602052604090205460ff16156114f05760405162461bcd60e51b815260206004820152602860248201527f5468617420536d6f6c2068617320616c7265616479206265656e207573656420604482015267746f20636c61696d60c01b60648201526084016106ef565b6000828152601860205260409020805460ff1916600117905561151233611983565b5050808061151f90612851565b91505061138f565b61152f6118d7565b600d805460ff191691151591909117905542600e55565b61154e6118d7565b6001600160a01b0381166115b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ef565b6115bc81611931565b50565b60006001600160e01b0319821663780e9d6360e01b14806105bc57506105bc82611bf8565b6000818152600260205260409020546001600160a01b03166115bc5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016106ef565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061167882610964565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806116bd83610964565b9050806001600160a01b0316846001600160a01b0316148061170457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806117285750836001600160a01b031661171d84610654565b6001600160a01b0316145b949350505050565b826001600160a01b031661174382610964565b6001600160a01b0316146117a75760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016106ef565b6001600160a01b0382166118095760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106ef565b611814838383611c48565b61181f600082611643565b6001600160a01b038316600090815260036020526040812080546001929061184890849061286a565b90915550506001600160a01b0382166000908152600360205260408120805460019290611876908490612898565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b546001600160a01b03163314610c7a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ef565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611991600c80546001019055565b601154600c5411156119e55760405162461bcd60e51b815260206004820152601c60248201527f50726f6a6563742069732066696e6973686564206d696e74696e672e0000000060448201526064016106ef565b60006119f0600c5490565b90506109608282611c53565b816001600160a01b0316836001600160a01b031603611a5d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106ef565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611ad5848484611730565b611ae184848484611da1565b6113365760405162461bcd60e51b81526004016106ef906128b0565b6060611b08826115e4565b6000828152600a602052604081208054611b219061271e565b80601f0160208091040260200160405190810160405280929190818152602001828054611b4d9061271e565b8015611b9a5780601f10611b6f57610100808354040283529160200191611b9a565b820191906000526020600020905b815481529060010190602001808311611b7d57829003601f168201915b505050505090506000611bab611ea2565b90508051600003611bbd575092915050565b815115611bef578082604051602001611bd7929190612902565b60405160208183030381529060405292505050919050565b61172884611eb1565b60006001600160e01b031982166380ac58cd60e01b1480611c2957506001600160e01b03198216635b5e139f60e01b145b806105bc57506301ffc9a760e01b6001600160e01b03198316146105bc565b610790838383611f18565b6001600160a01b038216611ca95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106ef565b6000818152600260205260409020546001600160a01b031615611d0e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106ef565b611d1a60008383611c48565b6001600160a01b0382166000908152600360205260408120805460019290611d43908490612898565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611e9757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611de5903390899088908890600401612931565b6020604051808303816000875af1925050508015611e20575060408051601f3d908101601f19168201909252611e1d9181019061296e565b60015b611e7d573d808015611e4e576040519150601f19603f3d011682016040523d82523d6000602084013e611e53565b606091505b508051600003611e755760405162461bcd60e51b81526004016106ef906128b0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611728565b506001949350505050565b6060601280546105d19061271e565b6060611ebc826115e4565b6000611ec6611ea2565b90506000815111611ee65760405180602001604052806000815250611f11565b80611ef084611fd0565b604051602001611f01929190612902565b6040516020818303038152906040525b9392505050565b6001600160a01b038316611f7357611f6e81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611f96565b816001600160a01b0316836001600160a01b031614611f9657611f9683826120d1565b6001600160a01b038216611fad576107908161216e565b826001600160a01b0316826001600160a01b03161461079057610790828261221d565b606081600003611ff75750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612021578061200b81612851565b915061201a9050600a836127f1565b9150611ffb565b60008167ffffffffffffffff81111561203c5761203c612455565b6040519080825280601f01601f191660200182016040528015612066576020820181803683370190505b5090505b84156117285761207b60018361286a565b9150612088600a8661298b565b612093906030612898565b60f81b8183815181106120a8576120a8612805565b60200101906001600160f81b031916908160001a9053506120ca600a866127f1565b945061206a565b600060016120de84610be2565b6120e8919061286a565b60008381526007602052604090205490915080821461213b576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906121809060019061286a565b600083815260096020526040812054600880549394509092849081106121a8576121a8612805565b9060005260206000200154905080600883815481106121c9576121c9612805565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806122015761220161299f565b6001900381819060005260206000200160009055905550505050565b600061222883610be2565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b82805461226d9061271e565b90600052602060002090601f01602090048101928261228f57600085556122d5565b82601f106122a857805160ff19168380011785556122d5565b828001600101855582156122d5579182015b828111156122d55782518255916020019190600101906122ba565b506122e19291506122e5565b5090565b5b808211156122e157600081556001016122e6565b6001600160e01b0319811681146115bc57600080fd5b60006020828403121561232257600080fd5b8135611f11816122fa565b60005b83811015612348578181015183820152602001612330565b838111156113365750506000910152565b6000815180845261237181602086016020860161232d565b601f01601f19169290920160200192915050565b602081526000611f116020830184612359565b6000602082840312156123aa57600080fd5b5035919050565b6001600160a01b03811681146115bc57600080fd5b600080604083850312156123d957600080fd5b82356123e4816123b1565b946020939093013593505050565b60008060006060848603121561240757600080fd5b8335612412816123b1565b92506020840135612422816123b1565b929592945050506040919091013590565b6000806040838503121561244657600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561248657612486612455565b604051601f8501601f19908116603f011681019082821181831017156124ae576124ae612455565b816040528093508581528686860111156124c757600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156124f357600080fd5b813567ffffffffffffffff81111561250a57600080fd5b8201601f8101841361251b57600080fd5b6117288482356020840161246b565b60006020828403121561253c57600080fd5b8135611f11816123b1565b6020808252825182820181905260009190848201906040850190845b8181101561257f57835183529284019291840191600101612563565b50909695505050505050565b8035801515811461259b57600080fd5b919050565b600080604083850312156125b357600080fd5b82356125be816123b1565b91506125cc6020840161258b565b90509250929050565b600080600080608085870312156125eb57600080fd5b84356125f6816123b1565b93506020850135612606816123b1565b925060408501359150606085013567ffffffffffffffff81111561262957600080fd5b8501601f8101871361263a57600080fd5b6126498782356020840161246b565b91505092959194509250565b6000806020838503121561266857600080fd5b823567ffffffffffffffff8082111561268057600080fd5b818501915085601f83011261269457600080fd5b8135818111156126a357600080fd5b8660208260051b85010111156126b857600080fd5b60209290920196919550909350505050565b600080604083850312156126dd57600080fd5b82356126e8816123b1565b915060208301356126f8816123b1565b809150509250929050565b60006020828403121561271557600080fd5b611f118261258b565b600181811c9082168061273257607f821691505b60208210810361275257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156127d6576127d66127a6565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612800576128006127db565b500490565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561282d57600080fd5b5051919050565b60006020828403121561284657600080fd5b8151611f11816123b1565b600060018201612863576128636127a6565b5060010190565b60008282101561287c5761287c6127a6565b500390565b600081612890576128906127a6565b506000190190565b600082198211156128ab576128ab6127a6565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000835161291481846020880161232d565b83519083019061292881836020880161232d565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061296490830184612359565b9695505050505050565b60006020828403121561298057600080fd5b8151611f11816122fa565b60008261299a5761299a6127db565b500690565b634e487b7160e01b600052603160045260246000fdfea26469706673582212202fc0ece2118a7873d5a572d6bf9da1b4b48490341fc54eb98d6598f17f2a549964736f6c634300080d003368747470733a2f2f697066732e696f2f697066732f516d5a367a5856794e327155556941765334347832565573674858724d794b416d70596174594274726d4a5a4d6a2f";

type SmolrDoomersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmolrDoomersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmolrDoomers__factory extends ContractFactory {
  constructor(...args: SmolrDoomersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SmolrDoomers> {
    return super.deploy(overrides || {}) as Promise<SmolrDoomers>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SmolrDoomers {
    return super.attach(address) as SmolrDoomers;
  }
  override connect(signer: Signer): SmolrDoomers__factory {
    return super.connect(signer) as SmolrDoomers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmolrDoomersInterface {
    return new utils.Interface(_abi) as SmolrDoomersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmolrDoomers {
    return new Contract(address, _abi, signerOrProvider) as SmolrDoomers;
  }
}
